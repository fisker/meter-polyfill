{"version":3,"sources":["meter-polyfill.min.js"],"names":["root","factory","define","amd","module","exports","meterPolyfill","this","window","throwError","message","constructor","Error","greaterThan","value","low","nearest","high","each","arrLike","func","i","len","PROP_LENGTH","FALSE","isUndefined","obj","isNull","NULL","isValidValue","isFinite","toFloat","parseValue","valueForNull","arguments","length","assignValues","target","source","METER_PROPS","prop","getPropValue","propValues","isNullValue","min","max","PROP_MIN","METER_INITAL_VALUES","PROP_MAX","PROP_LOW","PROP_HIGH","PROP_OPTIMUM","PROP_VALUE","meterCalculator","meter","keys","returnValues","optimum","percentage","level","LEVEL_OPTIMUM","LEVEL_SUBOPTIMUM","LEVEL_SUBSUBOPTIMUM","isFirefox","className","METER_VALUE_CLASSES","funcApplyCall","oThis","args","apply","METHOD_CALL","arraySliceCall","slice","funcCallCall","arrayConcatCall","arrLike2","concat","arrayJoinCall","separator","join","funcBindCall","bind","includes","v","found","item","TRUE","memorize","cache","key","throwTypeError","TypeError","pretendNativeFunction","funcName","METHOD_TO_STRING","getToStringFunc","defineProperty","o","property","descriptor","objectDefineProperty","configurable","e","PROP_ENUMERABLE","number","METHOD_DEFINE_SETTER","METHOD_DEFINE_GETTER","PROP_GET","PROP_SET","isElement","el","tagName","PROP_TAGNAME","METHOD_TO_UPPER_CASE","getErrorMessage","testFunc","defaultMsg","getPropGetter","getPropDependencies","METHOD_GET_ATTRIBUTE","getPropSetter","getNonFiniteMsgs","METHOD_SET_ATTRIBUTE","lablesGetter","assignedLables","propId","PROP_ID","allLabels","label","propFor","PROP_FOR","PROP_CONTROL","METHOD_GET_ELEMENTS_BY_TAG_NAME","METER_TAG_NAME","getPropDescriptor","getter","setter","enumerable","get","set","getValueDescriptor","document","navigator","userAgent","indexOf","METHOD_TO_LOWER_CASE","METER_INTERFACE","VERSION","NOOP","METER_CLASS_PREFIX","PROP_LABELS","METHOD_CREATE_ELEMENT","meterElement","nativeSupport","Number","parseFloat","PROP_PROTOTYPE","PROP_CONSTRUCTOR","PROP_PROTO","METHOD_APPLY","METHOD_CONCAT","METHOD_SLICE","METHOD_JOIN","oObject","Object","arrayPrototype","Array","funcPrototype","Function","create","funcToString","TO_STRING","funcToBind","proto","nativeToString","toString","replace","getElementById","HTMLElement","Element","Node","documentElement","LABEL_TAG_NAME","allMeters","createElement","HTMLLabelElement","findLabelAssociatedElement","htmlFor","childNodes","getElementsByTagName","associated","node","LABELABLE_ELEMENTS","split","HTMLLabelElementPrototype","PROP_PLACEHOLDER","MSG_NON_FINITE","PROP_VOLUME","audioNonFiniteMsg","Audio","progressNonFiniteMsg","progress","props","getMeterDescriptors","HTMLMeterElement","MSG_ILLEAGE_CONSTRUCTOR","HTMLMeterElementPrototype","on","eventTypes","listener","useCapture","type","SUPPORTS_ADD_EVENT_LISTENER","METHOD_ADD_EVENT_LISTENER","SUPPORTS_ATTACH_EVENT","METHOD_ATTACH_EVENT","observe","callback","options","observer","MutationObserver","walkContext","context","observerAttributes","attrs","SUPPORTS_MUTATION_OBSERVER","mutations","mutation","atrr","attributeName","attributes","attributeFilter","SUPPORTS_DOM_ATTR_MODIFIED","METHOD_DOM_ATTR_MODIFIED","attr","attrName","SUPPORTS_PROPERTYCHANGE","propertyName","polyfillMeter","innerHTML","METER_SHADOW_HTML","defineMeterProperties","updateMeterStyle","triggerAttrChange","result","PROP_CLASS_NAME","PROP_STYLE","PROP_WIDTH","valueElement","PROP_FIRST_CHILD","currentClassName","changeClassName","currentWidth","changeWidth","POLYFILL_FLAG","properties","SUPPORTS_ATTERS_AS_PROPS","setAttribute","methodSetAttribute","removeAttribute","METHOD_REMOVE_ATTRIBUTE","methodRemoveAttribute","METHOD_CLONE_NODE","cloneNode","methodCloneNode","deep","clone","hasOwnProperty","observerDocument","PROP_TARGET","subtree","childList","SUPPORTS_DOM_NODE_INSERTED","METHOD_DOM_NODE_INSERTED","setInterval","TIMEOUT_FREQUENCY","METHOD_REMOVE_CHILD","METHOD_APPEND_CHILD","DIV_TAG_NAME","DIV_OPENING_TAG","DIV_CLOSING_TAG","WebKitMutationObserver","testDiv","testChild","setTimeout","setReady","isReady","completed","readyState","isTop","frameElement","_","doScroll","polyfillWhenReady","version","CLASSES","calc"],"mappings":"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","file":"../meter-polyfill.min.js","sourcesContent":["/* globals define: true, module: true*/\n(function(root, factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    define(function() {return factory(root);});\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory(root);\n  } else {\n    root.meterPolyfill = factory(root);\n  }\n})(this, function(window) {\n  'use strict';\n\n  var document = window.document;\n\n  function throwError(message, constructor) {\n    throw new (constructor || Error)(message);\n  }\n\n  if (!document) {\n    throwError('meter-polyfill requires a window with a document.');\n  }\n\n  var isFirefox = window.navigator.userAgent.indexOf('Firefox') > -1;\n\n  var METHOD_TO_UPPER_CASE = 'toUpperCase';\n  var METHOD_TO_LOWER_CASE = 'toLowerCase';\n\n  var METER_TAG_NAME = 'METER';\n  var METER_INTERFACE = 'HTMLMeterElement';\n  var VERSION = '1.7.2';\n\n  var NOOP = function() {}; // eslint no-empty-function: 0\n  var TRUE = true;\n  var FALSE = false;\n  var NULL = null;\n\n  var LEVEL_OPTIMUM = 1;\n  var LEVEL_SUBOPTIMUM = 2;\n  var LEVEL_SUBSUBOPTIMUM = 3;\n\n  var METER_CLASS_PREFIX = METER_TAG_NAME[METHOD_TO_LOWER_CASE]() + '-';\n  var METER_VALUE_CLASSES = {};\n  METER_VALUE_CLASSES[LEVEL_OPTIMUM] = METER_CLASS_PREFIX + 'optimum-value';\n  METER_VALUE_CLASSES[LEVEL_SUBOPTIMUM] = METER_CLASS_PREFIX + 'suboptimum-value';\n  METER_VALUE_CLASSES[LEVEL_SUBSUBOPTIMUM] = METER_CLASS_PREFIX + 'even-less-good-value';\n\n  var PROP_MIN = 'min';\n  var PROP_MAX = 'max';\n  var PROP_LOW = 'low';\n  var PROP_HIGH = 'high';\n  var PROP_VALUE = 'value';\n  var PROP_OPTIMUM = 'optimum';\n  var PROP_LABELS = 'labels';\n\n  var METER_PROPS = [PROP_MIN, PROP_MAX, PROP_LOW, PROP_HIGH, PROP_OPTIMUM, PROP_VALUE];\n\n  var METER_INITAL_VALUES = {\n    min: 0,\n    max: 1,\n    value: 0\n  };\n\n  // var PRECISION = isFirefox ? 16 : 6; // firefox and chrome use different precision\n\n  var PROP_LENGTH = 'length';\n  var METHOD_CREATE_ELEMENT = 'createElement';\n\n  var meterElement = document[METHOD_CREATE_ELEMENT](METER_TAG_NAME);\n  var nativeSupport = meterElement[PROP_MAX] === METER_INITAL_VALUES[PROP_MAX];\n\n  var toFloat = Number.parseFloat || parseFloat;\n\n  /**\n   * return value less than high\n   * @param  {Number} value\n   * @param  {Number} high\n   * @return {Number}\n   */\n  // function lessThan(value, high) {\n  //   if (value > high) {\n  //     value = high;\n  //   }\n  //   return value;\n  // }\n\n  /**\n   * return value greater than low\n   * @param  {Number} value\n   * @param  {Number} low\n   * @return {Number}\n   */\n  function greaterThan(value, low) {\n    if (value < low) {\n      value = low;\n    }\n    return value;\n  }\n\n  function nearest(value, low, high) {\n    if (value < low) {\n      value = low;\n    }\n\n    if (value > high) {\n      value = high;\n    }\n\n    return value;\n  }\n\n  function each(arrLike, func) {\n    var i = 0;\n    var len = arrLike[PROP_LENGTH];\n    for (; i < len; i++) {\n      if (func(arrLike[i], i) === FALSE) {\n        break;\n      }\n    }\n  }\n\n  function isUndefined(obj) {\n    return typeof obj === 'undefined';\n  }\n\n  function isNull(obj) {\n    return obj === NULL;\n  }\n\n  function isValidValue(obj) {\n    return isNull(obj) || isFinite(toFloat(obj));\n  }\n\n  function parseValue(value, valueForNull) {\n    if (arguments.length === 1) {\n      valueForNull = NULL;\n    }\n    return !isValidValue(value) || isNull(value) ?\n      valueForNull :\n      toFloat(value);\n  }\n\n  function assignValues(target, source) {\n    each(METER_PROPS, function(prop) {\n      target[prop] = parseValue(source[prop]);\n    });\n    return target;\n  }\n\n  function getPropValue(propValues, prop) {\n    var value = propValues[prop];\n    var isNullValue = isNull(value);\n    var min;\n    var max;\n    switch (prop) {\n      case PROP_MIN:\n        value = isNullValue ?\n          METER_INITAL_VALUES[PROP_MIN] :\n          value;\n        break;\n\n      case PROP_MAX:\n        value = isNullValue ?\n          METER_INITAL_VALUES[PROP_MAX] :\n          value;\n        min = getPropValue(propValues, PROP_MIN);\n        value = greaterThan(value, min);\n        break;\n\n      case PROP_LOW:\n        min = getPropValue(propValues, PROP_MIN);\n        value = isNullValue ?\n          min :\n          nearest(value, min, getPropValue(propValues, PROP_MAX));\n        break;\n\n      case PROP_HIGH:\n        max = getPropValue(propValues, PROP_MAX);\n        value = isNullValue ?\n          max :\n          nearest(value, getPropValue(propValues, PROP_LOW), max);\n        break;\n\n      case PROP_OPTIMUM:\n        min = getPropValue(propValues, PROP_MIN);\n        max = getPropValue(propValues, PROP_MAX);\n        value = isNullValue ?\n          (max - min) / 2 + min :\n          nearest(value, min, max);\n        break;\n\n      case PROP_VALUE:\n        value = isNullValue ?\n          METER_INITAL_VALUES[PROP_VALUE] :\n          value;\n        min = getPropValue(propValues, PROP_MIN);\n        max = getPropValue(propValues, PROP_MAX);\n        value = nearest(value, min, max);\n        break;\n\n      default:\n        break;\n    }\n\n    return value;\n  }\n\n  function meterCalculator(meter, keys) {\n    var propValues = assignValues({}, meter);\n    var returnValues = {};\n    each(METER_PROPS, function(prop) {\n      returnValues[prop] =\n        propValues[prop] =\n        getPropValue(propValues, prop);\n    });\n\n    var min = propValues[PROP_MIN];\n    var max = propValues[PROP_MAX];\n    var low = propValues[PROP_LOW];\n    var high = propValues[PROP_HIGH];\n    var optimum = propValues[PROP_OPTIMUM];\n    var value = propValues[PROP_VALUE];\n\n    var percentage = min === max ? 0 : (value - min) / (max - min) * 100;\n    var level = LEVEL_OPTIMUM;\n\n    if (\n      high === max ||\n      low === min ||\n      (optimum >= low && optimum <= high)\n    ) {\n      if (\n        (low <= optimum && value < low) ||\n        (low > optimum && value > low) ||\n        (high < optimum && value < high) ||\n        (high >= optimum && value > high)\n      ) {\n        level = LEVEL_SUBOPTIMUM;\n      }\n    } else if (low === high) {\n      if (\n        (low <= optimum && value < low) ||\n        (high > optimum && value > high)\n      ) {\n        level = LEVEL_SUBSUBOPTIMUM;\n      }\n    } else if (optimum < low) {\n      if (value > low && value <= high) {\n        level = LEVEL_SUBOPTIMUM;\n      } else if (value > high) {\n        level = LEVEL_SUBSUBOPTIMUM;\n      }\n    } else if (optimum > high) {\n      if (value >= low && value < high) {\n        level = LEVEL_SUBOPTIMUM;\n      } else if (value < low) {\n        level = LEVEL_SUBSUBOPTIMUM;\n      }\n    }\n\n    // firefox show diffently from chrome\n    // when value === high/low or min === max\n    if (isFirefox) {\n      if (min === max) {\n        percentage = 100;\n      }\n\n      if (\n        (optimum > high && value === high) ||\n        (optimum < low && value === low)\n      ) {\n        level = LEVEL_SUBOPTIMUM;\n      }\n    }\n\n    returnValues.percentage = percentage;\n    returnValues.level = level;\n    returnValues.className = METER_VALUE_CLASSES[level];\n\n    return returnValues;\n  }\n\n  var PROP_PROTOTYPE = 'prototype';\n  var PROP_CONSTRUCTOR = 'constructor';\n  var PROP_PROTO = '__proto__';\n\n  var METHOD_CALL = 'call';\n  var METHOD_APPLY = 'apply';\n  var METHOD_CONCAT = 'concat';\n  var METHOD_SLICE = 'slice';\n  var METHOD_TO_STRING = 'toString';\n  var METHOD_JOIN = 'join';\n\n  var oObject = Object;\n  var arrayPrototype = Array[PROP_PROTOTYPE];\n  var funcPrototype = Function[PROP_PROTOTYPE];\n  // var objPrototype = oObject[PROP_PROTOTYPE];\n\n  var objectDefineProperty = oObject.defineProperty;\n\n  var slice = arrayPrototype[METHOD_SLICE];\n  var apply = funcPrototype[METHOD_APPLY];\n  var concat = arrayPrototype[METHOD_CONCAT];\n  var bind = funcPrototype.bind;\n  var create = oObject.create;\n  var join = arrayPrototype[METHOD_JOIN];\n\n  var funcToString = funcPrototype[METHOD_TO_STRING];\n  var TO_STRING = '' + funcToString;\n\n  function funcApplyCall(func, oThis, args) {\n    return apply[METHOD_CALL](func, oThis, args);\n  }\n\n  function arraySliceCall(arrLike) {\n    var args = funcApplyCall(slice, arguments, [1]);\n    return funcApplyCall(slice, arrLike, args);\n  }\n\n  function funcCallCall(func, oThis) {\n    var args = arraySliceCall(arguments, 2);\n    return funcApplyCall(func, oThis, args);\n  }\n\n  function arrayConcatCall(arrLike, arrLike2) {\n    return funcCallCall(concat, arrLike, arrLike2);\n  }\n\n  function arrayJoinCall(arrLike, separator) {\n    return funcCallCall(join, arrLike, separator);\n  }\n\n  if (!bind) {\n    // simple bind\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\n    bind = function(oThis) {\n      var args = arraySliceCall(arguments, 1);\n      var funcToBind = this;\n      return function() {\n        args = arrayConcatCall(args, arguments);\n        return funcApplyCall(funcToBind, oThis, args);\n      };\n    };\n  }\n\n  function funcBindCall(func) {\n    return funcApplyCall(bind, func, arraySliceCall(arguments, 1));\n  }\n\n  if (!create) {\n    create = function(proto) {\n      // simple but enough\n      NOOP[PROP_PROTOTYPE] = proto;\n      return new NOOP();\n    };\n  }\n\n  // is Array.prototype includes/indexOf Faster?\n  function includes(arrLike, v) {\n    var found = FALSE;\n    each(arrLike, function(item) {\n      if (item === v) {\n        found = TRUE;\n        return FALSE;\n      }\n    });\n    return found;\n  }\n\n  function memorize(func) {\n    var cache = {};\n    return function() {\n      var args = arguments;\n      var key = arrayJoinCall(args, '_');\n      if (!(key in cache)) {\n        cache[key] = funcApplyCall(func, NULL, args);\n      }\n      return cache[key];\n    };\n  }\n\n  function throwTypeError(message) {\n    throwError(message, TypeError);\n  }\n\n  var nativeToString = funcBindCall(funcToString, funcToString);\n  nativeToString[METHOD_TO_STRING] = nativeToString;\n\n  var getToStringFunc = memorize(function(funcName) {\n    function toString() {\n      return TO_STRING.replace(METHOD_TO_STRING, funcName);\n    }\n    toString[METHOD_TO_STRING] = nativeToString;\n    return toString;\n  });\n\n  function pretendNativeFunction(funcName, func) {\n    func[METHOD_TO_STRING] = getToStringFunc(funcName);\n    return func;\n  }\n\n  var PROP_GET = 'get';\n  var PROP_SET = 'set';\n\n  function defineProperty(o, property, descriptor) {\n    if (objectDefineProperty) {\n      descriptor.configurable = TRUE;\n\n      try {\n        return objectDefineProperty(o, property, descriptor);\n      } catch (e) {\n        var PROP_ENUMERABLE = 'enumerable';\n        if (descriptor[PROP_ENUMERABLE] && e.number === -0x7FF5EC54) {\n          descriptor[PROP_ENUMERABLE] = FALSE;\n          return objectDefineProperty(o, property, descriptor);\n        }\n      }\n    } else {\n      var METHOD_DEFINE_SETTER = '__defineSetter__';\n      var METHOD_DEFINE_GETTER = '__defineGetter__';\n      if (descriptor[PROP_GET]) {\n        if (METHOD_DEFINE_GETTER in o) {\n          o[METHOD_DEFINE_GETTER](property, descriptor[PROP_GET]);\n        } else {\n          o[property] = funcBindCall(descriptor[PROP_GET], o);\n        }\n      }\n\n      if (descriptor[PROP_SET] && METHOD_DEFINE_SETTER in o) {\n        o[METHOD_DEFINE_SETTER](property, descriptor[PROP_SET]);\n      }\n\n      if (descriptor[PROP_VALUE]) {\n        o[property] = descriptor[PROP_VALUE];\n      }\n    }\n  }\n\n\n  var PROP_ID = 'id';\n  var PROP_FOR = 'htmlFor';\n  var PROP_CONTROL = 'control';\n\n  var METHOD_GET_ELEMENTS_BY_TAG_NAME = 'getElementsByTagName';\n  var METHOD_SET_ATTRIBUTE = 'setAttribute';\n\n  var getElementById = funcBindCall(document.getElementById, document);\n  var HTMLElement = window.HTMLElement || window.Element || window.Node || NOOP;\n  var documentElement = document.documentElement;\n\n  var LABEL_TAG_NAME = 'LABEL';\n\n  var allLabels = documentElement[METHOD_GET_ELEMENTS_BY_TAG_NAME](LABEL_TAG_NAME);\n  var allMeters = documentElement[METHOD_GET_ELEMENTS_BY_TAG_NAME](METER_TAG_NAME);\n\n  // ie 8 document.createElement is not a function\n  // ie 7 document.createElement.apply is undefined\n  var createElement = funcBindCall(document[METHOD_CREATE_ELEMENT], document);\n\n  function isElement(el, tagName) {\n    var PROP_TAGNAME = 'tagName';\n    return el && el[PROP_TAGNAME] && el[PROP_TAGNAME][METHOD_TO_UPPER_CASE]() === tagName;\n  }\n\n  (function(HTMLLabelElement) {\n    var LABELABLE_ELEMENTS = (\n      'BUTTON INPUT KEYGEN ' +\n      METER_TAG_NAME +\n      ' OUTPUT PROGRESS SELECT TEXTAREA'\n      ).split(' ');\n\n    function findLabelAssociatedElement() {\n      var label = this;\n      var htmlFor = label[PROP_FOR];\n      if (htmlFor) {\n        return getElementById(htmlFor);\n      }\n\n      var childNodes = label.getElementsByTagName('*');\n      var associated = NULL;\n      each(childNodes, function(node) {\n        var tagName = node.tagName[METHOD_TO_UPPER_CASE]();\n        if (includes(LABELABLE_ELEMENTS, tagName)) {\n          associated = node;\n          return FALSE;\n        }\n      });\n\n      return associated;\n    }\n\n    var HTMLLabelElementPrototype = HTMLLabelElement && HTMLLabelElement[PROP_PROTOTYPE];\n    if (!HTMLLabelElementPrototype) {\n      return;\n    }\n    if (!(PROP_CONTROL in HTMLLabelElementPrototype)) {\n      defineProperty(\n        HTMLLabelElementPrototype,\n        PROP_CONTROL,\n        getPropDescriptor(findLabelAssociatedElement)\n        );\n    }\n  })(window.HTMLLabelElement);\n\n  function getErrorMessage(testFunc, defaultMsg) {\n    try {\n      testFunc();\n    } catch (e) {\n      return e.message;\n    }\n    return defaultMsg;\n  }\n\n  // find right msg by test on a non-finite prop of known element\n  var PROP_PLACEHOLDER = '{prop}';\n  var MSG_NON_FINITE = (function() {\n    var PROP_VOLUME = 'volume';\n    var audioNonFiniteMsg = getErrorMessage(function() {\n      if (Audio) {\n        new Audio()[PROP_VOLUME] = 'x';\n      }\n    });\n\n    if (audioNonFiniteMsg) {\n      return audioNonFiniteMsg\n        .replace('HTMLMediaElement', METER_INTERFACE)\n        .replace(PROP_VOLUME, PROP_PLACEHOLDER);\n    }\n\n    var progressNonFiniteMsg = getErrorMessage(function() {\n      var progress = createElement('PROGRESS');\n      progress[PROP_MAX] = 'x';\n    });\n\n    if (progressNonFiniteMsg) {\n      return progressNonFiniteMsg\n        .replace('HTMLProgressElement', METER_INTERFACE)\n        .replace(PROP_MAX, PROP_PLACEHOLDER);\n    }\n\n    return METER_INTERFACE + '.' + PROP_VOLUME + ' error';\n  })();\n\n  var getNonFiniteMsgs = memorize(function(prop) {\n    return MSG_NON_FINITE.replace(PROP_PLACEHOLDER, prop);\n  });\n\n  // only get necessary props\n  var getPropDependencies = memorize(function(prop) {\n    var props = {};\n    props[PROP_MIN] = [];\n    props[PROP_MAX] = [PROP_MIN];\n    props[PROP_LOW] =\n      props[PROP_OPTIMUM] =\n      props[PROP_VALUE] = [PROP_MIN, PROP_MAX];\n    props[PROP_HIGH] = [PROP_MIN, PROP_MAX, PROP_LOW];\n    return arrayConcatCall(props[prop], [prop]);\n  });\n\n\n  var METHOD_GET_ATTRIBUTE = 'getAttribute';\n  // use common getter & setter\n  function getPropGetter(prop) {\n    return function() {\n      var meter = this;\n      var propValues = {};\n      each(getPropDependencies(prop), function(prop) {\n        propValues[prop] = parseValue(meter[METHOD_GET_ATTRIBUTE](prop));\n      });\n\n      return getPropValue(propValues, prop);\n    };\n  }\n\n  function getPropSetter(prop) {\n    return function(value) {\n      var meter = this;\n      if (!isValidValue(value)) {\n        throwTypeError(getNonFiniteMsgs(prop));\n      }\n\n      meter[METHOD_SET_ATTRIBUTE](prop, '' + parseValue(value, 0));\n      return value;\n    };\n  }\n\n  function lablesGetter() {\n    var meter = this;\n    var assignedLables = [];\n    var i = 0;\n    var propId = meter[PROP_ID];\n\n    each(allLabels, function(label) {\n      var propFor = label[PROP_FOR];\n\n      if (\n        (label[PROP_CONTROL] === meter) ||\n        (!propFor && label[METHOD_GET_ELEMENTS_BY_TAG_NAME](METER_TAG_NAME)[0] === meter) ||\n        (propFor && propFor === propId)\n      ) {\n        assignedLables[i++] = label;\n      }\n    });\n\n    return assignedLables;\n  }\n\n  function getPropDescriptor(getter, setter) {\n    return {\n      enumerable: TRUE,\n      get: getter,\n      set: setter\n    };\n  }\n\n  function getValueDescriptor(value) {\n    return {\n      value: value\n    };\n  }\n\n  var getMeterDescriptors = memorize(function(prop) {\n    return prop === PROP_LABELS ?\n      getPropDescriptor(lablesGetter) :\n      getPropDescriptor(\n        getPropGetter(prop),\n        getPropSetter(prop)\n      );\n  });\n\n  var HTMLMeterElement = (function(HTMLMeterElement) {\n    var MSG_ILLEAGE_CONSTRUCTOR = getErrorMessage(function() {\n      HTMLElement && new HTMLElement();\n    }, 'Illegal constructor');\n\n    var HTMLMeterElementPrototype;\n    if (HTMLMeterElement) {\n      HTMLMeterElementPrototype = HTMLMeterElement[PROP_PROTOTYPE];\n    } else {\n      HTMLMeterElement = window[METER_INTERFACE] = function() {\n        throwTypeError(MSG_ILLEAGE_CONSTRUCTOR);\n      };\n      HTMLMeterElementPrototype = create(HTMLElement[PROP_PROTOTYPE]);\n      HTMLMeterElementPrototype[PROP_CONSTRUCTOR] = HTMLMeterElement;\n      HTMLMeterElement[PROP_PROTOTYPE] = HTMLMeterElementPrototype;\n      HTMLMeterElement = pretendNativeFunction(METER_INTERFACE, HTMLMeterElement);\n    }\n\n    if (!HTMLMeterElementPrototype[PROP_LABELS]) {\n      defineProperty(HTMLMeterElementPrototype, PROP_LABELS, getMeterDescriptors(PROP_LABELS));\n    }\n\n    each(METER_PROPS, function(prop) {\n      if (!(prop in HTMLMeterElementPrototype)) {\n        defineProperty(HTMLMeterElementPrototype, prop, getMeterDescriptors(prop));\n      }\n    });\n\n    return HTMLMeterElement;\n  })(window[METER_INTERFACE]);\n\n  var meterPolyfill = meterElement[PROP_CONSTRUCTOR] === HTMLMeterElement ? NOOP : (function() {\n    /* polyfill starts */\n\n    var POLYFILL_FLAG = '_polyfill';\n\n    var METHOD_REMOVE_CHILD = 'removeChild';\n    var METHOD_REMOVE_ATTRIBUTE = 'removeAttribute';\n    var METHOD_APPEND_CHILD = 'appendChild';\n    var METHOD_ADD_EVENT_LISTENER = 'addEventListener';\n    var METHOD_ATTACH_EVENT = 'attachEvent';\n    var PROP_FIRST_CHILD = 'firstChild';\n\n    var DIV_TAG_NAME = 'DIV';\n\n    var DIV_OPENING_TAG = '<div class=\"';\n    var DIV_CLOSING_TAG = '</div>';\n\n    var TIMEOUT_FREQUENCY = 10;\n\n    // there is no moz/ms/o vendor prefix\n    var MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n    meterElement[POLYFILL_FLAG] = VERSION; // for attersAsProps test\n\n    var SUPPORTS_MUTATION_OBSERVER = !!MutationObserver;\n    var SUPPORTS_ADD_EVENT_LISTENER = !!window[METHOD_ADD_EVENT_LISTENER];\n    var SUPPORTS_ATTACH_EVENT = !!window[METHOD_ATTACH_EVENT];\n    // ie <= 8 attributes are same as properties\n    var SUPPORTS_ATTERS_AS_PROPS = meterElement[METHOD_GET_ATTRIBUTE](POLYFILL_FLAG) ===\n      VERSION;\n    var SUPPORTS_PROPERTYCHANGE = 'onpropertychange' in document;\n    var SUPPORTS_DOM_NODE_INSERTED = FALSE;\n    var SUPPORTS_DOM_ATTR_MODIFIED = FALSE;\n\n\n    var METHOD_DOM_NODE_INSERTED = 'DOMNodeInserted';\n    var METHOD_DOM_ATTR_MODIFIED = 'DOMAttrModified';\n    if (!SUPPORTS_MUTATION_OBSERVER) {\n      var testDiv = createElement(DIV_TAG_NAME);\n      var testChild = createElement(DIV_TAG_NAME);\n\n      on(testDiv, METHOD_DOM_NODE_INSERTED, function() {\n        SUPPORTS_DOM_NODE_INSERTED = TRUE;\n      });\n      on(testDiv, METHOD_DOM_ATTR_MODIFIED, function() {\n        SUPPORTS_DOM_ATTR_MODIFIED = TRUE;\n      });\n\n      testDiv[METHOD_APPEND_CHILD](testChild);\n      testDiv[METHOD_SET_ATTRIBUTE](POLYFILL_FLAG, VERSION);\n\n      testDiv = testChild = NULL;\n    }\n\n    function on(target, eventTypes, listener, useCapture) {\n      each(eventTypes.split(' '), function(type) {\n        if (SUPPORTS_ADD_EVENT_LISTENER) {\n          target[METHOD_ADD_EVENT_LISTENER](type, listener, !!useCapture);\n        } else if (SUPPORTS_ATTACH_EVENT) {\n          target[METHOD_ATTACH_EVENT]('on' + type, listener);\n        } else {\n          target['on' + type] = listener;\n        }\n      });\n    }\n\n    function observe(target, callback, options) {\n      var observer = new MutationObserver(callback);\n      observer.observe(target, options);\n      return observer;\n    }\n\n    var METER_SHADOW_HTML = [\n      DIV_OPENING_TAG + METER_CLASS_PREFIX + 'inner-element\">',\n      DIV_OPENING_TAG + METER_CLASS_PREFIX + 'bar\">',\n      DIV_OPENING_TAG + METER_VALUE_CLASSES[LEVEL_SUBOPTIMUM] + '\" style=\"width: 0%\">',\n      DIV_CLOSING_TAG,\n      DIV_CLOSING_TAG,\n      DIV_CLOSING_TAG\n    ][METHOD_JOIN]('');\n\n    var setTimeout = window.setTimeout;\n    var setInterval = window.setInterval;\n\n    function walkContext(context, tagName, func) {\n      context = context[PROP_LENGTH] ? context : context[METHOD_GET_ELEMENTS_BY_TAG_NAME](tagName);\n      each(context, function(context) {\n        func(context);\n      });\n    }\n\n    function observerAttributes(target, attrs, callback) {\n      if (SUPPORTS_MUTATION_OBSERVER) {\n        observe(target, function(mutations) {\n          each(mutations, function(mutation) {\n            var atrr = mutation.attributeName[METHOD_TO_LOWER_CASE]();\n            callback(target, atrr);\n          });\n        }, {\n          attributes: TRUE,\n          attributeFilter: attrs\n        });\n      } else if (SUPPORTS_DOM_ATTR_MODIFIED) {\n        on(target, METHOD_DOM_ATTR_MODIFIED, function(e) {\n          var attr = e.attrName[METHOD_TO_LOWER_CASE]();\n          if (includes(attrs, attr)) {\n            callback(target, attr);\n          }\n        });\n      } else if (SUPPORTS_PROPERTYCHANGE) {\n        on(target, 'propertychange', function(e) {\n          var prop = e.propertyName[METHOD_TO_LOWER_CASE]();\n          if (includes(attrs, prop)) {\n            callback(target, prop);\n          }\n        });\n      }\n      // anything else?\n    }\n\n    function polyfillMeter(context) {\n      if (!isElement(context, METER_TAG_NAME)) {\n        return walkContext(context || allMeters, METER_TAG_NAME, polyfillMeter);\n      }\n\n      var meter = context;\n      if (meter.constructor !== HTMLMeterElement) {\n        meter.innerHTML = METER_SHADOW_HTML;\n        defineMeterProperties(meter);\n        updateMeterStyle(meter);\n        observerAttributes(meter, METER_PROPS, triggerAttrChange);\n      }\n    }\n\n    function updateMeterStyle(meter) {\n      var result = meterCalculator(meter);\n\n      var PROP_CLASS_NAME = 'className';\n      var PROP_STYLE = 'style';\n      var PROP_WIDTH = 'width';\n\n      var valueElement = meter[PROP_FIRST_CHILD][PROP_FIRST_CHILD][PROP_FIRST_CHILD];\n\n      // only update when necessary\n      var currentClassName = valueElement[PROP_CLASS_NAME];\n      var changeClassName = result[PROP_CLASS_NAME];\n      if (currentClassName !== changeClassName) {\n        valueElement[PROP_CLASS_NAME] = changeClassName;\n      }\n\n      var currentWidth = valueElement[PROP_STYLE][PROP_WIDTH];\n      var changeWidth = result.percentage + '%';\n      if (currentWidth !== changeWidth) {\n        valueElement[PROP_STYLE][PROP_WIDTH] = changeWidth;\n      }\n      return meter;\n    }\n\n    function triggerAttrChange(meter, attr) {\n      if (includes(METER_PROPS, attr[METHOD_TO_LOWER_CASE]())) {\n        updateMeterStyle(meter);\n      }\n    }\n\n    function defineMeterProperties(meter) {\n      var HTMLMeterElementPrototype = HTMLMeterElement[PROP_PROTOTYPE];\n\n      meter[PROP_PROTO] = HTMLMeterElementPrototype;\n      meter[POLYFILL_FLAG] = VERSION;\n\n      var properties = {};\n\n      // if (!SUPPORTS_ATTERS_AS_PROPS) {\n      //   each(METER_PROPS, function(prop) {\n      //     properties[prop] = getMeterDescriptors(prop);\n      //   });\n      // }\n\n      // properties[PROP_LABELS] = getMeterDescriptors(PROP_LABELS);\n      // properties[POLYFILL_FLAG] = getMeterDescriptors(VERSION);\n\n      if (!SUPPORTS_ATTERS_AS_PROPS) {\n        var setAttribute = funcBindCall(meter[METHOD_SET_ATTRIBUTE], meter);\n\n        var methodSetAttribute = pretendNativeFunction(METHOD_SET_ATTRIBUTE, function(attr, value) {\n          setAttribute(attr, value);\n          triggerAttrChange(meter, attr);\n        });\n\n        properties[METHOD_SET_ATTRIBUTE] = getValueDescriptor(methodSetAttribute);\n      }\n\n      if (SUPPORTS_ATTERS_AS_PROPS) {\n        var removeAttribute = funcBindCall(meter[METHOD_REMOVE_ATTRIBUTE], meter);\n\n        var methodRemoveAttribute = pretendNativeFunction(METHOD_REMOVE_ATTRIBUTE, function(attr) {\n          removeAttribute(attr);\n          triggerAttrChange(meter, attr);\n        });\n\n        properties[METHOD_REMOVE_ATTRIBUTE] = getValueDescriptor(methodRemoveAttribute);\n      }\n\n      var METHOD_CLONE_NODE = 'cloneNode';\n      var cloneNode = funcBindCall(meter[METHOD_CLONE_NODE], meter);\n      var methodCloneNode = pretendNativeFunction(METHOD_CLONE_NODE, function(deep) {\n        var clone = cloneNode(FALSE);\n        if (SUPPORTS_ATTERS_AS_PROPS) {\n          clone[METHOD_REMOVE_ATTRIBUTE](POLYFILL_FLAG);\n        }\n        polyfillMeter(clone);\n        return clone;\n      });\n\n      properties[METHOD_CLONE_NODE] = getValueDescriptor(methodCloneNode);\n\n      for (var prop in properties) {\n        if (properties.hasOwnProperty(prop)) {\n          defineProperty(meter, prop, properties[prop]);\n        }\n      }\n    }\n\n    // overwrite document.createElement\n    document[METHOD_CREATE_ELEMENT] = pretendNativeFunction(METHOD_CREATE_ELEMENT, function() {\n      var el = funcApplyCall(createElement, document, arguments);\n      if (isElement(el, METER_TAG_NAME)) {\n        polyfillMeter(el);\n      }\n      return el;\n    });\n\n    function observerDocument() {\n      var PROP_TARGET = 'target';\n      if (SUPPORTS_MUTATION_OBSERVER) {\n        // observe subtree\n        observe(documentElement, function(mutations) {\n          each(mutations, function(mutation) {\n            polyfillMeter(mutation[PROP_TARGET]);\n          });\n        }, {\n          subtree: TRUE,\n          childList: TRUE\n        });\n      } else {\n        if (SUPPORTS_DOM_NODE_INSERTED) {\n          on(documentElement, METHOD_DOM_NODE_INSERTED, function(e) {\n            polyfillMeter(e[PROP_TARGET]);\n          });\n        } else {\n          setInterval(polyfillMeter, TIMEOUT_FREQUENCY);\n        }\n      }\n    }\n\n    (function() {\n      var isReady = FALSE;\n      var isTop = FALSE;\n\n      function setReady() {\n        isReady = TRUE;\n      }\n\n      function completed() {\n        if (document.readyState === 'complete') {\n          setReady();\n        }\n      }\n\n      try {\n        isTop = isNull(window.frameElement);\n      } catch (_) {}\n\n      if (!SUPPORTS_ADD_EVENT_LISTENER && documentElement.doScroll && isTop) {\n        (function doScroll() {\n          try {\n            documentElement.doScroll();\n            setReady();\n          } catch (_) {\n            setTimeout(doScroll, TIMEOUT_FREQUENCY);\n          }\n        })();\n      }\n\n      on(document, 'DOMContentLoaded', setReady);\n      on(window, 'load', setReady);\n      on(document, 'readystatechange', completed);\n      completed();\n\n      (function polyfillWhenReady() {\n        if (isReady) {\n          polyfillMeter();\n          observerDocument();\n        } else {\n          setTimeout(polyfillWhenReady, TIMEOUT_FREQUENCY);\n        }\n      })();\n    })();\n\n    return polyfillMeter;\n  })();\n\n\n  meterPolyfill.version = VERSION;\n  meterPolyfill.CLASSES = METER_VALUE_CLASSES;\n  meterPolyfill.LEVEL_SUBOPTIMUM = LEVEL_SUBOPTIMUM;\n  meterPolyfill.LEVEL_OPTIMUM = LEVEL_OPTIMUM;\n  meterPolyfill.LEVEL_SUBSUBOPTIMUM = LEVEL_SUBSUBOPTIMUM;\n  meterPolyfill.calc = meterCalculator;\n\n\n  return meterPolyfill;\n});\n"]}