{"version":3,"sources":["polyfill.min.js"],"names":["root","factory","define","amd","module","exports","meterPolyfill","this","window","document","throwError","message","constructor","Error","isFirefox","navigator","userAgent","indexOf","METHOD_TO_UPPER_CASE","METHOD_TO_LOWER_CASE","METER_TAG_NAME","METER_INTERFACE","VERSION","NOOP","TRUE","FALSE","NULL","LEVEL_OPTIMUM","LEVEL_SUBOPTIMUM","LEVEL_SUBSUBOPTIMUM","METER_CLASS_PREFIX","METER_VALUE_CLASSES","PROP_MIN","PROP_MAX","PROP_LOW","PROP_HIGH","PROP_VALUE","PROP_OPTIMUM","PROP_LABELS","METER_PROPS","METER_INITAL_VALUES","min","max","value","PROP_LENGTH","METHOD_CREATE_ELEMENT","meterElement","nativeSupport","toFloat","Number","parseFloat","greaterThan","low","nearest","high","each","arrLike","func","i","len","isUndefined","obj","isNull","isValidValue","isFinite","parseValue","valueForNull","arguments","length","assignValues","target","source","prop","getPropValue","propValues","isNullValue","meterCalculator","meter","keys","returnValues","optimum","percentage","level","className","PROP_PROTOTYPE","PROP_CONSTRUCTOR","PROP_PROTO","METHOD_CALL","METHOD_APPLY","METHOD_CONCAT","METHOD_SLICE","METHOD_TO_STRING","METHOD_JOIN","oObject","Object","arrayPrototype","Array","funcPrototype","Function","objectDefineProperty","defineProperty","slice","apply","concat","bind","create","join","funcToString","TO_STRING","funcApplyCall","oThis","args","arraySliceCall","funcCallCall","arrayConcatCall","arrLike2","arrayJoinCall","separator","funcBindCall","includes","v","found","item","memoize","cache","key","throwTypeError","TypeError","funcToBind","proto","nativeToString","getToStringFunc","funcName","toString","replace","pretendNativeFunction","PROP_GET","PROP_SET","o","property","descriptor","configurable","e","PROP_ENUMERABLE","number","METHOD_DEFINE_SETTER","METHOD_DEFINE_GETTER","PROP_ID","PROP_FOR","PROP_CONTROL","METHOD_GET_ELEMENTS_BY_TAG_NAME","METHOD_SET_ATTRIBUTE","getElementById","HTMLElement","Element","Node","documentElement","LABEL_TAG_NAME","allLabels","allMeters","createElement","isElement","el","tagName","PROP_TAGNAME","getErrorMessage","testFunc","defaultMsg","HTMLLabelElement","LABELABLE_ELEMENTS","split","findLabelAssociatedElement","label","htmlFor","childNodes","getElementsByTagName","associated","node","HTMLLabelElementPrototype","getPropDescriptor","PROP_PLACEHOLDER","MSG_NON_FINITE","PROP_VOLUME","audioNonFiniteMsg","Audio","progressNonFiniteMsg","progress","getNonFiniteMsgs","getPropDependencies","props","METHOD_GET_ATTRIBUTE","getPropGetter","getPropSetter","lablesGetter","assignedLables","propId","propFor","getter","setter","enumerable","get","set","getValueDescriptor","getMeterDescriptors","HTMLMeterElement","MSG_ILLEAGE_CONSTRUCTOR","HTMLMeterElementPrototype","POLYFILL_FLAG","METHOD_REMOVE_CHILD","METHOD_REMOVE_ATTRIBUTE","METHOD_APPEND_CHILD","METHOD_ADD_EVENT_LISTENER","METHOD_ATTACH_EVENT","PROP_FIRST_CHILD","DIV_TAG_NAME","DIV_OPENING_TAG","DIV_CLOSING_TAG","TIMEOUT_FREQUENCY","MutationObserver","WebKitMutationObserver","SUPPORTS_MUTATION_OBSERVER","SUPPORTS_ADD_EVENT_LISTENER","SUPPORTS_ATTACH_EVENT","SUPPORTS_ATTERS_AS_PROPS","SUPPORTS_PROPERTYCHANGE","SUPPORTS_DOM_NODE_INSERTED","SUPPORTS_DOM_ATTR_MODIFIED","METHOD_DOM_NODE_INSERTED","METHOD_DOM_ATTR_MODIFIED","testDiv","testChild","on","eventTypes","listener","useCapture","type","observe","callback","options","observer","METER_SHADOW_HTML","setTimeout","setInterval","walkContext","context","observerAttributes","attrs","mutations","mutation","atrr","attributeName","attributes","attributeFilter","attr","attrName","propertyName","polyfillMeter","innerHTML","defineMeterProperties","updateMeterStyle","triggerAttrChange","result","PROP_CLASS_NAME","PROP_STYLE","PROP_WIDTH","valueElement","currentClassName","changeClassName","currentWidth","changeWidth","properties","setAttribute","methodSetAttribute","removeAttribute","methodRemoveAttribute","METHOD_CLONE_NODE","cloneNode","methodCloneNode","deep","clone","hasOwnProperty","observerDocument","PROP_TARGET","subtree","childList","isReady","isTop","setReady","completed","readyState","frameElement","_","doScroll","polyfillWhenReady","version","CLASSES","calc"],"mappings":"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","file":"polyfill.min.js","sourcesContent":["/* globals define: true, module: true*/\n(function(root, factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    define(function() {return factory(root);});\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory(root);\n  } else {\n    root.meterPolyfill = factory(root);\n  }\n})(this, function(window) {\n  'use strict';\n\n  var document = window.document;\n\n  function throwError(message, constructor) {\n    throw new (constructor || Error)(message);\n  }\n\n  if (!document) {\n    throwError('meter-polyfill requires a window with a document.');\n  }\n\n  var isFirefox = window.navigator.userAgent.indexOf('Firefox') > -1;\n\n  var METHOD_TO_UPPER_CASE = 'toUpperCase';\n  var METHOD_TO_LOWER_CASE = 'toLowerCase';\n\n  var METER_TAG_NAME = 'FMETER';\n  var METER_INTERFACE = 'HTMLFakeMeterElement';\n  var VERSION = '1.7.2';\n\n  var NOOP = function() {}; // eslint no-empty-function: 0\n  var TRUE = true;\n  var FALSE = false;\n  var NULL = null;\n\n  var LEVEL_OPTIMUM = 1;\n  var LEVEL_SUBOPTIMUM = 2;\n  var LEVEL_SUBSUBOPTIMUM = 3;\n\n  var METER_CLASS_PREFIX = METER_TAG_NAME[METHOD_TO_LOWER_CASE]() + '-';\n  var METER_VALUE_CLASSES = {};\n  METER_VALUE_CLASSES[LEVEL_OPTIMUM] = METER_CLASS_PREFIX + 'optimum-value';\n  METER_VALUE_CLASSES[LEVEL_SUBOPTIMUM] = METER_CLASS_PREFIX + 'suboptimum-value';\n  METER_VALUE_CLASSES[LEVEL_SUBSUBOPTIMUM] = METER_CLASS_PREFIX + 'even-less-good-value';\n\n  var PROP_MIN = 'min';\n  var PROP_MAX = 'max';\n  var PROP_LOW = 'low';\n  var PROP_HIGH = 'high';\n  var PROP_VALUE = 'value';\n  var PROP_OPTIMUM = 'optimum';\n  var PROP_LABELS = 'labels';\n\n  var METER_PROPS = [PROP_MIN, PROP_MAX, PROP_LOW, PROP_HIGH, PROP_OPTIMUM, PROP_VALUE];\n\n  var METER_INITAL_VALUES = {\n    min: 0,\n    max: 1,\n    value: 0\n  };\n\n  // var PRECISION = isFirefox ? 16 : 6; // firefox and chrome use different precision\n\n  var PROP_LENGTH = 'length';\n  var METHOD_CREATE_ELEMENT = 'createElement';\n\n  var meterElement = document[METHOD_CREATE_ELEMENT](METER_TAG_NAME);\n  var nativeSupport = meterElement[PROP_MAX] === METER_INITAL_VALUES[PROP_MAX];\n\n  var toFloat = Number.parseFloat || parseFloat;\n\n  /**\n   * return value less than high\n   * @param  {Number} value\n   * @param  {Number} high\n   * @return {Number}\n   */\n  // function lessThan(value, high) {\n  //   if (value > high) {\n  //     value = high;\n  //   }\n  //   return value;\n  // }\n\n  /**\n   * return value greater than low\n   * @param  {Number} value\n   * @param  {Number} low\n   * @return {Number}\n   */\n  function greaterThan(value, low) {\n    if (value < low) {\n      value = low;\n    }\n    return value;\n  }\n\n  function nearest(value, low, high) {\n    if (value < low) {\n      value = low;\n    }\n\n    if (value > high) {\n      value = high;\n    }\n\n    return value;\n  }\n\n  function each(arrLike, func) {\n    var i = 0;\n    var len = arrLike[PROP_LENGTH];\n    for (; i < len; i++) {\n      if (func(arrLike[i], i) === FALSE) {\n        break;\n      }\n    }\n  }\n\n  function isUndefined(obj) {\n    return typeof obj === 'undefined';\n  }\n\n  function isNull(obj) {\n    return obj === NULL;\n  }\n\n  function isValidValue(obj) {\n    return isNull(obj) || isFinite(toFloat(obj));\n  }\n\n  function parseValue(value, valueForNull) {\n    if (arguments.length === 1) {\n      valueForNull = NULL;\n    }\n    return !isValidValue(value) || isNull(value) ?\n      valueForNull :\n      toFloat(value);\n  }\n\n  function assignValues(target, source) {\n    each(METER_PROPS, function(prop) {\n      target[prop] = parseValue(source[prop]);\n    });\n    return target;\n  }\n\n  function getPropValue(propValues, prop) {\n    var value = propValues[prop];\n    var isNullValue = isNull(value);\n    var min;\n    var max;\n    switch (prop) {\n      case PROP_MIN:\n        value = isNullValue ?\n          METER_INITAL_VALUES[PROP_MIN] :\n          value;\n        break;\n\n      case PROP_MAX:\n        value = isNullValue ?\n          METER_INITAL_VALUES[PROP_MAX] :\n          value;\n        min = getPropValue(propValues, PROP_MIN);\n        value = greaterThan(value, min);\n        break;\n\n      case PROP_LOW:\n        min = getPropValue(propValues, PROP_MIN);\n        value = isNullValue ?\n          min :\n          nearest(value, min, getPropValue(propValues, PROP_MAX));\n        break;\n\n      case PROP_HIGH:\n        max = getPropValue(propValues, PROP_MAX);\n        value = isNullValue ?\n          max :\n          nearest(value, getPropValue(propValues, PROP_LOW), max);\n        break;\n\n      case PROP_OPTIMUM:\n        min = getPropValue(propValues, PROP_MIN);\n        max = getPropValue(propValues, PROP_MAX);\n        value = isNullValue ?\n          (max - min) / 2 + min :\n          nearest(value, min, max);\n        break;\n\n      case PROP_VALUE:\n        value = isNullValue ?\n          METER_INITAL_VALUES[PROP_VALUE] :\n          value;\n        min = getPropValue(propValues, PROP_MIN);\n        max = getPropValue(propValues, PROP_MAX);\n        value = nearest(value, min, max);\n        break;\n\n      default:\n        break;\n    }\n\n    return value;\n  }\n\n  function meterCalculator(meter, keys) {\n    var propValues = assignValues({}, meter);\n    var returnValues = {};\n    each(METER_PROPS, function(prop) {\n      returnValues[prop] =\n        propValues[prop] =\n        getPropValue(propValues, prop);\n    });\n\n    var min = propValues[PROP_MIN];\n    var max = propValues[PROP_MAX];\n    var low = propValues[PROP_LOW];\n    var high = propValues[PROP_HIGH];\n    var optimum = propValues[PROP_OPTIMUM];\n    var value = propValues[PROP_VALUE];\n\n    var percentage = min === max ? 0 : (value - min) / (max - min) * 100;\n    var level = LEVEL_OPTIMUM;\n\n    if (\n      high === max ||\n      low === min ||\n      (optimum >= low && optimum <= high)\n    ) {\n      if (\n        (low <= optimum && value < low) ||\n        (low > optimum && value > low) ||\n        (high < optimum && value < high) ||\n        (high >= optimum && value > high)\n      ) {\n        level = LEVEL_SUBOPTIMUM;\n      }\n    } else if (low === high) {\n      if (\n        (low <= optimum && value < low) ||\n        (high > optimum && value > high)\n      ) {\n        level = LEVEL_SUBSUBOPTIMUM;\n      }\n    } else if (optimum < low) {\n      if (value > low && value <= high) {\n        level = LEVEL_SUBOPTIMUM;\n      } else if (value > high) {\n        level = LEVEL_SUBSUBOPTIMUM;\n      }\n    } else if (optimum > high) {\n      if (value >= low && value < high) {\n        level = LEVEL_SUBOPTIMUM;\n      } else if (value < low) {\n        level = LEVEL_SUBSUBOPTIMUM;\n      }\n    }\n\n    // firefox show diffently from chrome\n    // when value === high/low or min === max\n    if (isFirefox) {\n      if (min === max) {\n        percentage = 100;\n      }\n\n      if (\n        (optimum > high && value === high) ||\n        (optimum < low && value === low)\n      ) {\n        level = LEVEL_SUBOPTIMUM;\n      }\n    }\n\n    returnValues.percentage = percentage;\n    returnValues.level = level;\n    returnValues.className = METER_VALUE_CLASSES[level];\n\n    return returnValues;\n  }\n\n  var PROP_PROTOTYPE = 'prototype';\n  var PROP_CONSTRUCTOR = 'constructor';\n  var PROP_PROTO = '__proto__';\n\n  var METHOD_CALL = 'call';\n  var METHOD_APPLY = 'apply';\n  var METHOD_CONCAT = 'concat';\n  var METHOD_SLICE = 'slice';\n  var METHOD_TO_STRING = 'toString';\n  var METHOD_JOIN = 'join';\n\n  var oObject = Object;\n  var arrayPrototype = Array[PROP_PROTOTYPE];\n  var funcPrototype = Function[PROP_PROTOTYPE];\n  // var objPrototype = oObject[PROP_PROTOTYPE];\n\n  var objectDefineProperty = oObject.defineProperty;\n\n  var slice = arrayPrototype[METHOD_SLICE];\n  var apply = funcPrototype[METHOD_APPLY];\n  var concat = arrayPrototype[METHOD_CONCAT];\n  var bind = funcPrototype.bind;\n  var create = oObject.create;\n  var join = arrayPrototype[METHOD_JOIN];\n\n  var funcToString = funcPrototype[METHOD_TO_STRING];\n  var TO_STRING = '' + funcToString;\n\n  function funcApplyCall(func, oThis, args) {\n    return apply[METHOD_CALL](func, oThis, args);\n  }\n\n  function arraySliceCall(arrLike) {\n    var args = funcApplyCall(slice, arguments, [1]);\n    return funcApplyCall(slice, arrLike, args);\n  }\n\n  function funcCallCall(func, oThis) {\n    var args = arraySliceCall(arguments, 2);\n    return funcApplyCall(func, oThis, args);\n  }\n\n  function arrayConcatCall(arrLike, arrLike2) {\n    return funcCallCall(concat, arrLike, arrLike2);\n  }\n\n  function arrayJoinCall(arrLike, separator) {\n    return funcCallCall(join, arrLike, separator);\n  }\n\n  if (!bind) {\n    // simple bind\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\n    bind = function(oThis) {\n      var args = arraySliceCall(arguments, 1);\n      var funcToBind = this;\n      return function() {\n        args = arrayConcatCall(args, arguments);\n        return funcApplyCall(funcToBind, oThis, args);\n      };\n    };\n  }\n\n  function funcBindCall(func) {\n    return funcApplyCall(bind, func, arraySliceCall(arguments, 1));\n  }\n\n  if (!create) {\n    create = function(proto) {\n      // simple but enough\n      NOOP[PROP_PROTOTYPE] = proto;\n      return new NOOP();\n    };\n  }\n\n  // is Array.prototype includes/indexOf Faster?\n  function includes(arrLike, v) {\n    var found = FALSE;\n    each(arrLike, function(item) {\n      if (item === v) {\n        found = TRUE;\n        return FALSE;\n      }\n    });\n    return found;\n  }\n\n  function memoize(func) {\n    var cache = {};\n    return function() {\n      var args = arguments;\n      var key = arrayJoinCall(args, '_');\n      if (!(key in cache)) {\n        cache[key] = funcApplyCall(func, NULL, args);\n      }\n      return cache[key];\n    };\n  }\n\n  function throwTypeError(message) {\n    throwError(message, TypeError);\n  }\n\n  var nativeToString = funcBindCall(funcToString, funcToString);\n  nativeToString[METHOD_TO_STRING] = nativeToString;\n\n  var getToStringFunc = memoize(function(funcName) {\n    function toString() {\n      return TO_STRING.replace(METHOD_TO_STRING, funcName);\n    }\n    toString[METHOD_TO_STRING] = nativeToString;\n    return toString;\n  });\n\n  function pretendNativeFunction(funcName, func) {\n    func[METHOD_TO_STRING] = getToStringFunc(funcName);\n    return func;\n  }\n\n  var PROP_GET = 'get';\n  var PROP_SET = 'set';\n\n  function defineProperty(o, property, descriptor) {\n    if (objectDefineProperty) {\n      descriptor.configurable = TRUE;\n\n      try {\n        return objectDefineProperty(o, property, descriptor);\n      } catch (e) {\n        var PROP_ENUMERABLE = 'enumerable';\n        if (descriptor[PROP_ENUMERABLE] && e.number === -0x7FF5EC54) {\n          descriptor[PROP_ENUMERABLE] = FALSE;\n          return objectDefineProperty(o, property, descriptor);\n        }\n      }\n    } else {\n      var METHOD_DEFINE_SETTER = '__defineSetter__';\n      var METHOD_DEFINE_GETTER = '__defineGetter__';\n      if (descriptor[PROP_GET]) {\n        if (METHOD_DEFINE_GETTER in o) {\n          o[METHOD_DEFINE_GETTER](property, descriptor[PROP_GET]);\n        } else {\n          o[property] = funcBindCall(descriptor[PROP_GET], o);\n        }\n      }\n\n      if (descriptor[PROP_SET] && METHOD_DEFINE_SETTER in o) {\n        o[METHOD_DEFINE_SETTER](property, descriptor[PROP_SET]);\n      }\n\n      if (descriptor[PROP_VALUE]) {\n        o[property] = descriptor[PROP_VALUE];\n      }\n    }\n  }\n\n\n  var PROP_ID = 'id';\n  var PROP_FOR = 'htmlFor';\n  var PROP_CONTROL = 'control';\n\n  var METHOD_GET_ELEMENTS_BY_TAG_NAME = 'getElementsByTagName';\n  var METHOD_SET_ATTRIBUTE = 'setAttribute';\n\n  var getElementById = funcBindCall(document.getElementById, document);\n  var HTMLElement = window.HTMLElement || window.Element || window.Node || NOOP;\n  var documentElement = document.documentElement;\n\n  var LABEL_TAG_NAME = 'LABEL';\n\n  var allLabels = documentElement[METHOD_GET_ELEMENTS_BY_TAG_NAME](LABEL_TAG_NAME);\n  var allMeters = documentElement[METHOD_GET_ELEMENTS_BY_TAG_NAME](METER_TAG_NAME);\n\n  // ie 8 document.createElement is not a function\n  // ie 7 document.createElement.apply is undefined\n  var createElement = funcBindCall(document[METHOD_CREATE_ELEMENT], document);\n\n  function isElement(el, tagName) {\n    var PROP_TAGNAME = 'tagName';\n    return el && el[PROP_TAGNAME] && el[PROP_TAGNAME][METHOD_TO_UPPER_CASE]() === tagName;\n  }\n\n  (function(HTMLLabelElement) {\n    var LABELABLE_ELEMENTS = (\n      'BUTTON INPUT KEYGEN ' +\n      METER_TAG_NAME +\n      ' OUTPUT PROGRESS SELECT TEXTAREA'\n      ).split(' ');\n\n    function findLabelAssociatedElement() {\n      var label = this;\n      var htmlFor = label[PROP_FOR];\n      if (htmlFor) {\n        return getElementById(htmlFor);\n      }\n\n      var childNodes = label.getElementsByTagName('*');\n      var associated = NULL;\n      each(childNodes, function(node) {\n        var tagName = node.tagName[METHOD_TO_UPPER_CASE]();\n        if (includes(LABELABLE_ELEMENTS, tagName)) {\n          associated = node;\n          return FALSE;\n        }\n      });\n\n      return associated;\n    }\n\n    var HTMLLabelElementPrototype = HTMLLabelElement && HTMLLabelElement[PROP_PROTOTYPE];\n    if (!HTMLLabelElementPrototype) {\n      return;\n    }\n    if (!(PROP_CONTROL in HTMLLabelElementPrototype)) {\n      defineProperty(\n        HTMLLabelElementPrototype,\n        PROP_CONTROL,\n        getPropDescriptor(findLabelAssociatedElement)\n        );\n    }\n  })(window.HTMLLabelElement);\n\n  function getErrorMessage(testFunc, defaultMsg) {\n    try {\n      testFunc();\n    } catch (e) {\n      return e.message;\n    }\n    return defaultMsg;\n  }\n\n  // find right msg by test on a non-finite prop of known element\n  var PROP_PLACEHOLDER = '{prop}';\n  var MSG_NON_FINITE = (function() {\n    var PROP_VOLUME = 'volume';\n    var audioNonFiniteMsg = getErrorMessage(function() {\n      if (Audio) {\n        new Audio()[PROP_VOLUME] = 'x';\n      }\n    });\n\n    if (audioNonFiniteMsg) {\n      return audioNonFiniteMsg\n        .replace('HTMLMediaElement', METER_INTERFACE)\n        .replace(PROP_VOLUME, PROP_PLACEHOLDER);\n    }\n\n    var progressNonFiniteMsg = getErrorMessage(function() {\n      var progress = createElement('PROGRESS');\n      progress[PROP_MAX] = 'x';\n    });\n\n    if (progressNonFiniteMsg) {\n      return progressNonFiniteMsg\n        .replace('HTMLProgressElement', METER_INTERFACE)\n        .replace(PROP_MAX, PROP_PLACEHOLDER);\n    }\n\n    return METER_INTERFACE + '.' + PROP_VOLUME + ' error';\n  })();\n\n  var getNonFiniteMsgs = memoize(function(prop) {\n    return MSG_NON_FINITE.replace(PROP_PLACEHOLDER, prop);\n  });\n\n  // only get necessary props\n  var getPropDependencies = memoize(function(prop) {\n    var props = {};\n    props[PROP_MIN] = [];\n    props[PROP_MAX] = [PROP_MIN];\n    props[PROP_LOW] =\n      props[PROP_OPTIMUM] =\n      props[PROP_VALUE] = [PROP_MIN, PROP_MAX];\n    props[PROP_HIGH] = [PROP_MIN, PROP_MAX, PROP_LOW];\n    return arrayConcatCall(props[prop], [prop]);\n  });\n\n\n  var METHOD_GET_ATTRIBUTE = 'getAttribute';\n  // use common getter & setter\n  function getPropGetter(prop) {\n    return function() {\n      var meter = this;\n      var propValues = {};\n      each(getPropDependencies(prop), function(prop) {\n        propValues[prop] = parseValue(meter[METHOD_GET_ATTRIBUTE](prop));\n      });\n\n      return getPropValue(propValues, prop);\n    };\n  }\n\n  function getPropSetter(prop) {\n    return function(value) {\n      var meter = this;\n      if (!isValidValue(value)) {\n        throwTypeError(getNonFiniteMsgs(prop));\n      }\n\n      meter[METHOD_SET_ATTRIBUTE](prop, '' + parseValue(value, 0));\n      return value;\n    };\n  }\n\n  function lablesGetter() {\n    var meter = this;\n    var assignedLables = [];\n    var i = 0;\n    var propId = meter[PROP_ID];\n\n    each(allLabels, function(label) {\n      var propFor = label[PROP_FOR];\n\n      if (\n        (label[PROP_CONTROL] === meter) ||\n        (!propFor && label[METHOD_GET_ELEMENTS_BY_TAG_NAME](METER_TAG_NAME)[0] === meter) ||\n        (propFor && propFor === propId)\n      ) {\n        assignedLables[i++] = label;\n      }\n    });\n\n    return assignedLables;\n  }\n\n  function getPropDescriptor(getter, setter) {\n    return {\n      enumerable: TRUE,\n      get: getter,\n      set: setter\n    };\n  }\n\n  function getValueDescriptor(value) {\n    return {\n      value: value\n    };\n  }\n\n  var getMeterDescriptors = memoize(function(prop) {\n    return prop === PROP_LABELS ?\n      getPropDescriptor(lablesGetter) :\n      getPropDescriptor(\n        getPropGetter(prop),\n        getPropSetter(prop)\n      );\n  });\n\n  var HTMLMeterElement = (function(HTMLMeterElement) {\n    var MSG_ILLEAGE_CONSTRUCTOR = getErrorMessage(function() {\n      HTMLElement && new HTMLElement();\n    }, 'Illegal constructor');\n\n    var HTMLMeterElementPrototype;\n    if (HTMLMeterElement) {\n      HTMLMeterElementPrototype = HTMLMeterElement[PROP_PROTOTYPE];\n    } else {\n      HTMLMeterElement = window[METER_INTERFACE] = function() {\n        throwTypeError(MSG_ILLEAGE_CONSTRUCTOR);\n      };\n      HTMLMeterElementPrototype = create(HTMLElement[PROP_PROTOTYPE]);\n      HTMLMeterElementPrototype[PROP_CONSTRUCTOR] = HTMLMeterElement;\n      HTMLMeterElement[PROP_PROTOTYPE] = HTMLMeterElementPrototype;\n      HTMLMeterElement = pretendNativeFunction(METER_INTERFACE, HTMLMeterElement);\n    }\n\n    if (!HTMLMeterElementPrototype[PROP_LABELS]) {\n      defineProperty(HTMLMeterElementPrototype, PROP_LABELS, getMeterDescriptors(PROP_LABELS));\n    }\n\n    each(METER_PROPS, function(prop) {\n      if (!(prop in HTMLMeterElementPrototype)) {\n        defineProperty(HTMLMeterElementPrototype, prop, getMeterDescriptors(prop));\n      }\n    });\n\n    return HTMLMeterElement;\n  })(window[METER_INTERFACE]);\n\n  var meterPolyfill = meterElement[PROP_CONSTRUCTOR] === HTMLMeterElement ? NOOP : (function() {\n    /* polyfill starts */\n\n    var POLYFILL_FLAG = '_polyfill';\n\n    var METHOD_REMOVE_CHILD = 'removeChild';\n    var METHOD_REMOVE_ATTRIBUTE = 'removeAttribute';\n    var METHOD_APPEND_CHILD = 'appendChild';\n    var METHOD_ADD_EVENT_LISTENER = 'addEventListener';\n    var METHOD_ATTACH_EVENT = 'attachEvent';\n    var PROP_FIRST_CHILD = 'firstChild';\n\n    var DIV_TAG_NAME = 'DIV';\n\n    var DIV_OPENING_TAG = '<div class=\"';\n    var DIV_CLOSING_TAG = '</div>';\n\n    var TIMEOUT_FREQUENCY = 10;\n\n    // there is no moz/ms/o vendor prefix\n    var MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n    meterElement[POLYFILL_FLAG] = VERSION; // for attersAsProps test\n\n    var SUPPORTS_MUTATION_OBSERVER = !!MutationObserver;\n    var SUPPORTS_ADD_EVENT_LISTENER = !!window[METHOD_ADD_EVENT_LISTENER];\n    var SUPPORTS_ATTACH_EVENT = !!window[METHOD_ATTACH_EVENT];\n    // ie <= 8 attributes are same as properties\n    var SUPPORTS_ATTERS_AS_PROPS = meterElement[METHOD_GET_ATTRIBUTE](POLYFILL_FLAG) ===\n      VERSION;\n    var SUPPORTS_PROPERTYCHANGE = 'onpropertychange' in document;\n    var SUPPORTS_DOM_NODE_INSERTED = FALSE;\n    var SUPPORTS_DOM_ATTR_MODIFIED = FALSE;\n\n\n    var METHOD_DOM_NODE_INSERTED = 'DOMNodeInserted';\n    var METHOD_DOM_ATTR_MODIFIED = 'DOMAttrModified';\n    if (!SUPPORTS_MUTATION_OBSERVER) {\n      var testDiv = createElement(DIV_TAG_NAME);\n      var testChild = createElement(DIV_TAG_NAME);\n\n      on(testDiv, METHOD_DOM_NODE_INSERTED, function() {\n        SUPPORTS_DOM_NODE_INSERTED = TRUE;\n      });\n      on(testDiv, METHOD_DOM_ATTR_MODIFIED, function() {\n        SUPPORTS_DOM_ATTR_MODIFIED = TRUE;\n      });\n\n      testDiv[METHOD_APPEND_CHILD](testChild);\n      testDiv[METHOD_SET_ATTRIBUTE](POLYFILL_FLAG, VERSION);\n\n      testDiv = testChild = NULL;\n    }\n\n    function on(target, eventTypes, listener, useCapture) {\n      each(eventTypes.split(' '), function(type) {\n        if (SUPPORTS_ADD_EVENT_LISTENER) {\n          target[METHOD_ADD_EVENT_LISTENER](type, listener, !!useCapture);\n        } else if (SUPPORTS_ATTACH_EVENT) {\n          target[METHOD_ATTACH_EVENT]('on' + type, listener);\n        } else {\n          target['on' + type] = listener;\n        }\n      });\n    }\n\n    function observe(target, callback, options) {\n      var observer = new MutationObserver(callback);\n      observer.observe(target, options);\n      return observer;\n    }\n\n    var METER_SHADOW_HTML = [\n      DIV_OPENING_TAG + METER_CLASS_PREFIX + 'inner-element\">',\n      DIV_OPENING_TAG + METER_CLASS_PREFIX + 'bar\">',\n      DIV_OPENING_TAG + METER_VALUE_CLASSES[LEVEL_SUBOPTIMUM] + '\" style=\"width: 0%\">',\n      DIV_CLOSING_TAG,\n      DIV_CLOSING_TAG,\n      DIV_CLOSING_TAG\n    ][METHOD_JOIN]('');\n\n    var setTimeout = window.setTimeout;\n    var setInterval = window.setInterval;\n\n    function walkContext(context, tagName, func) {\n      context = context[PROP_LENGTH] ? context : context[METHOD_GET_ELEMENTS_BY_TAG_NAME](tagName);\n      each(context, function(context) {\n        func(context);\n      });\n    }\n\n    function observerAttributes(target, attrs, callback) {\n      if (SUPPORTS_MUTATION_OBSERVER) {\n        observe(target, function(mutations) {\n          each(mutations, function(mutation) {\n            var atrr = mutation.attributeName[METHOD_TO_LOWER_CASE]();\n            callback(target, atrr);\n          });\n        }, {\n          attributes: TRUE,\n          attributeFilter: attrs\n        });\n      } else if (SUPPORTS_DOM_ATTR_MODIFIED) {\n        on(target, METHOD_DOM_ATTR_MODIFIED, function(e) {\n          var attr = e.attrName[METHOD_TO_LOWER_CASE]();\n          if (includes(attrs, attr)) {\n            callback(target, attr);\n          }\n        });\n      } else if (SUPPORTS_PROPERTYCHANGE) {\n        on(target, 'propertychange', function(e) {\n          var prop = e.propertyName[METHOD_TO_LOWER_CASE]();\n          if (includes(attrs, prop)) {\n            callback(target, prop);\n          }\n        });\n      }\n      // anything else?\n    }\n\n    function polyfillMeter(context) {\n      if (!isElement(context, METER_TAG_NAME)) {\n        return walkContext(context || allMeters, METER_TAG_NAME, polyfillMeter);\n      }\n\n      var meter = context;\n      if (meter.constructor !== HTMLMeterElement) {\n        meter.innerHTML = METER_SHADOW_HTML;\n        defineMeterProperties(meter);\n        updateMeterStyle(meter);\n        observerAttributes(meter, METER_PROPS, triggerAttrChange);\n      }\n    }\n\n    function updateMeterStyle(meter) {\n      var result = meterCalculator(meter);\n\n      var PROP_CLASS_NAME = 'className';\n      var PROP_STYLE = 'style';\n      var PROP_WIDTH = 'width';\n\n      var valueElement = meter[PROP_FIRST_CHILD][PROP_FIRST_CHILD][PROP_FIRST_CHILD];\n\n      // only update when necessary\n      var currentClassName = valueElement[PROP_CLASS_NAME];\n      var changeClassName = result[PROP_CLASS_NAME];\n      if (currentClassName !== changeClassName) {\n        valueElement[PROP_CLASS_NAME] = changeClassName;\n      }\n\n      var currentWidth = valueElement[PROP_STYLE][PROP_WIDTH];\n      var changeWidth = result.percentage + '%';\n      if (currentWidth !== changeWidth) {\n        valueElement[PROP_STYLE][PROP_WIDTH] = changeWidth;\n      }\n      return meter;\n    }\n\n    function triggerAttrChange(meter, attr) {\n      if (includes(METER_PROPS, attr[METHOD_TO_LOWER_CASE]())) {\n        updateMeterStyle(meter);\n      }\n    }\n\n    function defineMeterProperties(meter) {\n      var HTMLMeterElementPrototype = HTMLMeterElement[PROP_PROTOTYPE];\n\n      meter[PROP_PROTO] = HTMLMeterElementPrototype;\n      meter[POLYFILL_FLAG] = VERSION;\n\n      var properties = {};\n\n      // if (!SUPPORTS_ATTERS_AS_PROPS) {\n      //   each(METER_PROPS, function(prop) {\n      //     properties[prop] = getMeterDescriptors(prop);\n      //   });\n      // }\n\n      // properties[PROP_LABELS] = getMeterDescriptors(PROP_LABELS);\n      // properties[POLYFILL_FLAG] = getMeterDescriptors(VERSION);\n\n      if (!SUPPORTS_ATTERS_AS_PROPS) {\n        var setAttribute = funcBindCall(meter[METHOD_SET_ATTRIBUTE], meter);\n\n        var methodSetAttribute = pretendNativeFunction(METHOD_SET_ATTRIBUTE, function(attr, value) {\n          setAttribute(attr, value);\n          triggerAttrChange(meter, attr);\n        });\n\n        properties[METHOD_SET_ATTRIBUTE] = getValueDescriptor(methodSetAttribute);\n      }\n\n      if (SUPPORTS_ATTERS_AS_PROPS) {\n        var removeAttribute = funcBindCall(meter[METHOD_REMOVE_ATTRIBUTE], meter);\n\n        var methodRemoveAttribute = pretendNativeFunction(METHOD_REMOVE_ATTRIBUTE, function(attr) {\n          removeAttribute(attr);\n          triggerAttrChange(meter, attr);\n        });\n\n        properties[METHOD_REMOVE_ATTRIBUTE] = getValueDescriptor(methodRemoveAttribute);\n      }\n\n      var METHOD_CLONE_NODE = 'cloneNode';\n      var cloneNode = funcBindCall(meter[METHOD_CLONE_NODE], meter);\n      var methodCloneNode = pretendNativeFunction(METHOD_CLONE_NODE, function(deep) {\n        var clone = cloneNode(FALSE);\n        if (SUPPORTS_ATTERS_AS_PROPS) {\n          clone[METHOD_REMOVE_ATTRIBUTE](POLYFILL_FLAG);\n        }\n        polyfillMeter(clone);\n        return clone;\n      });\n\n      properties[METHOD_CLONE_NODE] = getValueDescriptor(methodCloneNode);\n\n      for (var prop in properties) {\n        if (properties.hasOwnProperty(prop)) {\n          defineProperty(meter, prop, properties[prop]);\n        }\n      }\n    }\n\n    // overwrite document.createElement\n    document[METHOD_CREATE_ELEMENT] = pretendNativeFunction(METHOD_CREATE_ELEMENT, function() {\n      var el = funcApplyCall(createElement, document, arguments);\n      if (isElement(el, METER_TAG_NAME)) {\n        polyfillMeter(el);\n      }\n      return el;\n    });\n\n    function observerDocument() {\n      var PROP_TARGET = 'target';\n      if (SUPPORTS_MUTATION_OBSERVER) {\n        // observe subtree\n        observe(documentElement, function(mutations) {\n          each(mutations, function(mutation) {\n            polyfillMeter(mutation[PROP_TARGET]);\n          });\n        }, {\n          subtree: TRUE,\n          childList: TRUE\n        });\n      } else {\n        if (SUPPORTS_DOM_NODE_INSERTED) {\n          on(documentElement, METHOD_DOM_NODE_INSERTED, function(e) {\n            polyfillMeter(e[PROP_TARGET]);\n          });\n        } else {\n          setInterval(polyfillMeter, TIMEOUT_FREQUENCY);\n        }\n      }\n    }\n\n    (function() {\n      var isReady = FALSE;\n      var isTop = FALSE;\n\n      function setReady() {\n        isReady = TRUE;\n      }\n\n      function completed() {\n        if (document.readyState === 'complete') {\n          setReady();\n        }\n      }\n\n      try {\n        isTop = isNull(window.frameElement);\n      } catch (_) {}\n\n      if (!SUPPORTS_ADD_EVENT_LISTENER && documentElement.doScroll && isTop) {\n        (function doScroll() {\n          try {\n            documentElement.doScroll();\n            setReady();\n          } catch (_) {\n            setTimeout(doScroll, TIMEOUT_FREQUENCY);\n          }\n        })();\n      }\n\n      on(document, 'DOMContentLoaded', setReady);\n      on(window, 'load', setReady);\n      on(document, 'readystatechange', completed);\n      completed();\n\n      (function polyfillWhenReady() {\n        if (isReady) {\n          polyfillMeter();\n          observerDocument();\n        } else {\n          setTimeout(polyfillWhenReady, TIMEOUT_FREQUENCY);\n        }\n      })();\n    })();\n\n    return polyfillMeter;\n  })();\n\n\n  meterPolyfill.version = VERSION;\n  meterPolyfill.CLASSES = METER_VALUE_CLASSES;\n  meterPolyfill.LEVEL_SUBOPTIMUM = LEVEL_SUBOPTIMUM;\n  meterPolyfill.LEVEL_OPTIMUM = LEVEL_OPTIMUM;\n  meterPolyfill.LEVEL_SUBSUBOPTIMUM = LEVEL_SUBSUBOPTIMUM;\n  meterPolyfill.calc = meterCalculator;\n\n\n  return meterPolyfill;\n});\n"]}