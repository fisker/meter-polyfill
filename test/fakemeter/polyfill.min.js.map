{"version":3,"sources":["polyfill.min.js"],"names":["root","factory","define","amd","module","exports","meterPolyfill","this","window","throwError","msg","constructor","Error","greaterThan","value","low","nearest","high","each","arrLike","func","i","len","PROP_LENGTH","FALSE","isUndefined","obj","isNull","NULL","isValidValue","isFinite","toFloat","parseValue","valueForNull","assignValues","target","source","METER_PROPS","prop","getPropValue","propValues","isNullValue","min","max","PROP_MIN","METER_INITAL_VALUES","PROP_MAX","PROP_LOW","PROP_HIGH","PROP_OPTIMUM","PROP_VALUE","meterCalculator","meter","optimum","percentage","level","LEVEL_OPTIMUM","LEVEL_SUBOPTIMUM","LEVEL_SUBSUBOPTIMUM","isFirefox","className","METER_VALUE_CLASSES","document","navigator","userAgent","indexOf","METER_TAG_NAME","VERSION","METHOD_TO_UPPER_CASE","METHOD_TO_LOWER_CASE","NOOP","TRUE","METER_CLASS_PREFIX","METHOD_CREATE_ELEMENT","meterElement","nativeSupport","Number","parseFloat","funcApplyCall","oThis","args","apply","METHOD_CALL","arraySliceCall","slice","arguments","arrayConcatCall","concat","funcBindCall","bind","includes","v","found","item","throwTypeError","TypeError","isElement","el","tagName","PROP_TAGNAME","pretendNativeFunction","funcName","METHOD_TO_STRING","toStingFns","toString","TO_STRING","replace","nativeToString","getValueDescriptor","on","eventTypes","listener","useCapture","split","type","SUPPORTS_ADD_EVENT_LISTENER","METHOD_ADD_EVENT_LISTENER","SUPPORTS_ATTACH_EVENT","METHOD_ATTACH_EVENT","observe","callback","options","observer","MutationObserver","walkContext","context","METHOD_GET_ELEMENTS_BY_TAG_NAME","observerAttributes","attrs","SUPPORTS_MUTATION_OBSERVER","mutations","mutation","atrr","attributeName","attributes","attributeFilter","SUPPORTS_DOM_ATTR_MODIFIED","METHOD_DOM_ATTR_MODIFIED","e","attr","attrName","SUPPORTS_PROPERTYCHANGE","propertyName","polyfillMeter","allMeters","POLYFILL_FLAG","createShadowDom","defineMeterProperties","triggerAttrChange","updateMeterStyle","result","PROP_CLASS_NAME","PROP_STYLE","PROP_WIDTH","valueElement","PROP_FIRST_CHILD","currentClassName","changeClassName","currentWidth","changeWidth","canHaveChildren","canHaveHTML","parent","parentNode","meterClone","createElement","replaceChild","slashMeters","slashMeter","METHOD_REMOVE_CHILD","innerHTML","METER_SHADOW_HTML","propGetter","propDependencies","METHOD_GET_ATTRIBUTE","propSetter","MSG_NON_FINITE","METHOD_SET_ATTRIBUTE","lablesGetter","assignedLables","propId","PROP_ID","allLabels","label","propFor","PROP_FOR","control","getPropDescriptor","getter","setter","enumerable","get","set","PROP_PROTO","HTMLMeterElement","prototype","properties","SUPPORTS_ATTERS_AS_PROPS","PROP_LABELS","setAttribute","methodSetAttribute","removeAttribute","METHOD_REMOVE_ATTRIBUTE","methodRemoveAttribute","METHOD_CLONE_NODE","cloneNode","methodCloneNode","deep","clone","PROP_CONSTRUCTOR","hasOwnProperty","defineProperty","observerDocument","PROP_TARGET","documentElement","subtree","childList","SUPPORTS_DOM_NODE_INSERTED","METHOD_DOM_NODE_INSERTED","setInterval","TIMEOUT_FREQUENCY","METHOD_APPEND_CHILD","PROP_PROTOTYPE","METHOD_APPLY","METHOD_CONCAT","METHOD_SLICE","DIV_TAG_NAME","LABEL_TAG_NAME","DIV_OPENING_TAG","DIV_CLOSING_TAG","HTMLElement","oObject","Object","arrayPrototype","Array","funcPrototype","Function","funcToString","funcToBind","objectDefineProperty","o","property","descriptor","configurable","PROP_ENUMERABLE","number","METHOD_DEFINE_SETTER","METHOD_DEFINE_GETTER","SUPPORTS_DEFINE_SETTER","PROP_GET","PROP_SET","create","proto","HTML_METER_ELEMENT_CONSTRICTOR_NAME","charAt","MSG_ILLEAGE_CONSTRUCTOR","message","htmlElementPrototype","Element","Node","WebKitMutationObserver","testDiv","testChild","join","setTimeout","setReady","isReady","completed","readyState","isTop","frameElement","_","doScroll","polyfillWhenReady","version","support","CLASSES","calc"],"mappings":"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","file":"polyfill.min.js","sourcesContent":["/* globals define: true, module: true*/\n(function(root, factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    define(factory(root));\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory(root);\n  } else {\n    root.meterPolyfill = factory(root);\n  }\n})(this, function(window) {\n  'use strict';\n\n  var document = window.document;\n\n  function throwError(msg, constructor) {\n    throw new (constructor || Error)(msg);\n  }\n\n  if (!document) {\n    throwError('meter-polyfill requires a window with a document.');\n  }\n\n  var isFirefox = window.navigator.userAgent.indexOf('Firefox') > -1;\n\n  var METER_TAG_NAME = 'FAKEMETER';\n  var VERSION = '1.6.1';\n\n  var METHOD_TO_UPPER_CASE = 'toUpperCase';\n  var METHOD_TO_LOWER_CASE = 'toLowerCase';\n\n\n  /* eslint no-empty-function: 0 */\n  var NOOP = function() {};\n  var TRUE = true;\n  var FALSE = false;\n  var NULL = null;\n\n  var LEVEL_OPTIMUM = 1;\n  var LEVEL_SUBOPTIMUM = 2;\n  var LEVEL_SUBSUBOPTIMUM = 3;\n\n  var METER_CLASS_PREFIX = METER_TAG_NAME[METHOD_TO_LOWER_CASE]() + '-';\n  var METER_VALUE_CLASSES = {};\n  METER_VALUE_CLASSES[LEVEL_OPTIMUM] = METER_CLASS_PREFIX + 'optimum-value';\n  METER_VALUE_CLASSES[LEVEL_SUBOPTIMUM] = METER_CLASS_PREFIX + 'suboptimum-value';\n  METER_VALUE_CLASSES[LEVEL_SUBSUBOPTIMUM] = METER_CLASS_PREFIX + 'even-less-good-value';\n\n  var PROP_MIN = 'min';\n  var PROP_MAX = 'max';\n  var PROP_LOW = 'low';\n  var PROP_HIGH = 'high';\n  var PROP_VALUE = 'value';\n  var PROP_OPTIMUM = 'optimum';\n\n  var METER_PROPS = [PROP_MIN, PROP_MAX, PROP_LOW, PROP_HIGH, PROP_OPTIMUM, PROP_VALUE];\n\n  var METER_INITAL_VALUES = {\n    min: 0,\n    max: 1,\n    value: 0\n  };\n\n  // var PRECISION = isFirefox ? 16 : 6; // firefox and chrome use different precision\n\n  var PROP_LENGTH = 'length';\n  var METHOD_CREATE_ELEMENT = 'createElement';\n\n  var meterElement = document[METHOD_CREATE_ELEMENT](METER_TAG_NAME);\n  var nativeSupport = meterElement[PROP_MAX] === METER_INITAL_VALUES[PROP_MAX];\n\n  var toFloat = Number.parseFloat || parseFloat;\n\n  // function lessThan(value, high) {\n  //   if (value > high) {\n  //     value = high;\n  //   }\n  //   return value;\n  // }\n\n  function greaterThan(value, low) {\n    if (value < low) {\n      value = low;\n    }\n    return value;\n  }\n\n  function nearest(value, low, high) {\n    if (value < low) {\n      value = low;\n    }\n\n    if (value > high) {\n      value = high;\n    }\n\n    return value;\n  }\n\n  function each(arrLike, func) {\n    var i = 0;\n    var len = arrLike[PROP_LENGTH];\n    for (; i < len; i++) {\n      if (func(arrLike[i], i) === FALSE) {\n        break;\n      }\n    }\n  }\n\n  function isUndefined(obj) {\n    return typeof obj === 'undefined';\n  }\n\n  function isNull(obj) {\n    return obj === NULL;\n  }\n\n  function isValidValue(obj) {\n    return isNull(obj) || isFinite(toFloat(obj));\n  }\n\n  function parseValue(value, valueForNull) {\n    if (isUndefined(valueForNull)) {\n      valueForNull = NULL;\n    }\n    return !isValidValue(value) || isNull(value) ?\n      valueForNull :\n      toFloat(value);\n  }\n\n  function assignValues(target, source) {\n    each(METER_PROPS, function(prop) {\n      target[prop] = parseValue(source[prop]);\n    });\n    return target;\n  }\n\n  function getPropValue(propValues, prop) {\n    var value = propValues[prop];\n    var isNullValue = isNull(value);\n    var min;\n    var max;\n    switch (prop) {\n      case PROP_MIN:\n        value = isNullValue ?\n          METER_INITAL_VALUES[PROP_MIN] :\n          value;\n        break;\n\n      case PROP_MAX:\n        value = isNullValue ?\n          METER_INITAL_VALUES[PROP_MAX] :\n          value;\n        min = getPropValue(propValues, PROP_MIN);\n        value = greaterThan(value, min);\n        break;\n\n      case PROP_LOW:\n        min = getPropValue(propValues, PROP_MIN);\n        value = isNullValue ?\n          min :\n          nearest(value, min, getPropValue(propValues, PROP_MAX));\n        break;\n\n      case PROP_HIGH:\n        max = getPropValue(propValues, PROP_MAX);\n        value = isNullValue ?\n          max :\n          nearest(value, getPropValue(propValues, PROP_LOW), max);\n        break;\n\n      case PROP_OPTIMUM:\n        min = getPropValue(propValues, PROP_MIN);\n        max = getPropValue(propValues, PROP_MAX);\n        value = isNullValue ?\n          (max - min) / 2 + min :\n          nearest(value, min, max);\n        break;\n\n      case PROP_VALUE:\n        value = isNullValue ?\n          METER_INITAL_VALUES[PROP_VALUE] :\n          value;\n        min = getPropValue(propValues, PROP_MIN);\n        max = getPropValue(propValues, PROP_MAX);\n        value = nearest(value, min, max);\n        break;\n\n      default:\n        break;\n    }\n    return value;\n  }\n\n  function meterCalculator(meter) {\n    var propValues = assignValues({}, meter);\n\n    var min = getPropValue(propValues, PROP_MIN);\n    var max = getPropValue(propValues, PROP_MAX);\n    var low = getPropValue(propValues, PROP_LOW);\n    var high = getPropValue(propValues, PROP_HIGH);\n    var optimum = getPropValue(propValues, PROP_OPTIMUM);\n    var value = getPropValue(propValues, PROP_VALUE);\n\n    var percentage = min === max ? 0 : (value - min) / (max - min) * 100;\n    var level = LEVEL_OPTIMUM;\n\n    if (\n      high === max ||\n      low === min ||\n      (optimum >= low && optimum <= high)\n    ) {\n      if (\n        (low <= optimum && value < low) ||\n        (low > optimum && value > low) ||\n        (high < optimum && value < high) ||\n        (high >= optimum && value > high)\n      ) {\n        level = LEVEL_SUBOPTIMUM;\n      }\n    } else if (low === high) {\n      if (\n        (low <= optimum && value < low) ||\n        (high > optimum && value > high)\n      ) {\n        level = LEVEL_SUBSUBOPTIMUM;\n      }\n    } else if (optimum < low) {\n      if (value > low && value <= high) {\n        level = LEVEL_SUBOPTIMUM;\n      } else if (value > high) {\n        level = LEVEL_SUBSUBOPTIMUM;\n      }\n    } else if (optimum > high) {\n      if (value >= low && value < high) {\n        level = LEVEL_SUBOPTIMUM;\n      } else if (value < low) {\n        level = LEVEL_SUBSUBOPTIMUM;\n      }\n    }\n\n    // firefox show diffently from chrome\n    // when value === high/low or min === max\n    if (isFirefox) {\n      if (min === max) {\n        percentage = 100;\n      }\n\n      if (\n          (optimum > high && value === high) ||\n          (optimum < low && value === low)\n       ) {\n        level = LEVEL_SUBOPTIMUM;\n      }\n    }\n\n    return {\n      min: min,\n      max: max,\n      low: low,\n      high: high,\n      optimum: optimum,\n      value: value,\n      percentage: percentage,\n      level: level,\n      className: METER_VALUE_CLASSES[level]\n    };\n  }\n\n  var meterPolyfill = nativeSupport ? NOOP : (function() {\n    /* polyfill starts */\n\n    var POLYFILL_FLAG = '_polyfill';\n\n    var PROP_LABELS = 'labels';\n\n    var METHOD_REMOVE_CHILD = 'removeChild';\n    var METHOD_SET_ATTRIBUTE = 'setAttribute';\n    var METHOD_GET_ATTRIBUTE = 'getAttribute';\n    var METHOD_REMOVE_ATTRIBUTE = 'removeAttribute';\n    var METHOD_APPEND_CHILD = 'appendChild';\n    var METHOD_ADD_EVENT_LISTENER = 'addEventListener';\n    var METHOD_ATTACH_EVENT = 'attachEvent';\n    var METHOD_GET_ELEMENTS_BY_TAG_NAME = 'getElementsByTagName';\n    var PROP_FIRST_CHILD = 'firstChild';\n\n    var PROP_PROTOTYPE = 'prototype';\n    var PROP_CONSTRUCTOR = 'constructor';\n    var PROP_PROTO = '__proto__';\n\n    var METHOD_CALL = 'call';\n    var METHOD_APPLY = 'apply';\n    var METHOD_CONCAT = 'concat';\n    var METHOD_SLICE = 'slice';\n\n    var DIV_TAG_NAME = 'DIV';\n    var LABEL_TAG_NAME = 'LABEL';\n    var DIV_OPENING_TAG = '<div class=\"';\n    var DIV_CLOSING_TAG = '</div>';\n\n    var TIMEOUT_FREQUENCY = 10;\n\n    var PROP_ID = 'id';\n    var PROP_FOR = 'htmlFor';\n\n    var documentElement = document.documentElement;\n    var HTMLElement = window.HTMLElement;\n\n    var allLabels = documentElement[METHOD_GET_ELEMENTS_BY_TAG_NAME](LABEL_TAG_NAME);\n    var allMeters = documentElement[METHOD_GET_ELEMENTS_BY_TAG_NAME](METER_TAG_NAME);\n\n    var oObject = Object;\n    var arrayPrototype = Array[PROP_PROTOTYPE];\n    var funcPrototype = Function[PROP_PROTOTYPE];\n    // var objPrototype = oObject[PROP_PROTOTYPE];\n\n    var METHOD_TO_STRING = 'toString';\n    var funcToString = funcPrototype[METHOD_TO_STRING];\n    // var objToString = objPrototype[METHOD_TO_STRING];\n    var TO_STRING = '' + funcToString;\n\n    var slice = arrayPrototype[METHOD_SLICE];\n    var apply = funcPrototype[METHOD_APPLY];\n    var concat = arrayPrototype[METHOD_CONCAT];\n\n    function funcApplyCall(func, oThis, args) {\n      return apply[METHOD_CALL](func, oThis, args);\n    }\n\n    function arraySliceCall(arrLike) {\n      var args = funcApplyCall(slice, arguments, [1]);\n      return funcApplyCall(slice, arrLike, args);\n    }\n\n    function arrayConcatCall(arrLike) {\n      var args = arraySliceCall(arguments, 1);\n      return funcApplyCall(concat, arrLike, args);\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\n    var bind = funcPrototype.bind || function(oThis) {\n      var args = arraySliceCall(arguments, 1);\n      var funcToBind = this;\n      return function() {\n        args = arrayConcatCall(args, arguments);\n        return funcApplyCall(funcToBind, oThis, args);\n      };\n    };\n\n    function funcBindCall(func) {\n      return funcApplyCall(bind, func, arraySliceCall(arguments, 1));\n    }\n\n    // only get necessary props\n    var propDependencies = {};\n    propDependencies[PROP_MIN] = [];\n    propDependencies[PROP_MAX] = [PROP_MIN];\n    propDependencies[PROP_LOW] =\n      propDependencies[PROP_OPTIMUM] =\n      propDependencies[PROP_VALUE] =\n      [PROP_MIN, PROP_MAX];\n    propDependencies[PROP_HIGH] = [PROP_MIN, PROP_MAX, PROP_LOW];\n\n    each(METER_PROPS, function(prop) {\n      propDependencies[prop] = arrayConcatCall(propDependencies[prop], [prop]);\n    });\n\n    var defineProperty;\n    var objectDefineProperty = oObject.defineProperty;\n    if (objectDefineProperty) {\n      defineProperty = function(o, property, descriptor) {\n        descriptor.configurable = TRUE;\n\n        try {\n          objectDefineProperty(o, property, descriptor);\n        } catch (e) {\n          var PROP_ENUMERABLE = 'enumerable';\n          if (descriptor[PROP_ENUMERABLE] && e.number === -0x7FF5EC54) {\n            descriptor[PROP_ENUMERABLE] = FALSE;\n            objectDefineProperty(o, property, descriptor);\n          }\n        }\n      };\n    } else {\n      var METHOD_DEFINE_SETTER = '__defineSetter__';\n      var METHOD_DEFINE_GETTER = '__defineGetter__';\n      var SUPPORTS_DEFINE_SETTER = METHOD_DEFINE_SETTER in documentElement;\n      defineProperty = function(o, property, descriptor) {\n        var PROP_GET = 'get';\n        var PROP_SET = 'set';\n        if (SUPPORTS_DEFINE_SETTER) {\n          if (descriptor[PROP_GET]) {\n            o[METHOD_DEFINE_GETTER](property, descriptor[PROP_GET]);\n          }\n          if (descriptor[PROP_SET]) {\n            o[METHOD_DEFINE_SETTER](property, descriptor[PROP_SET]);\n          }\n        } else {\n          if (descriptor[PROP_GET]) {\n            o[property] = funcBindCall(descriptor[PROP_GET], o);\n          }\n        }\n\n        if (descriptor[PROP_VALUE]) {\n          o[property] = descriptor[PROP_VALUE];\n        }\n      };\n    }\n\n    var create = oObject.create || function(proto) {\n      // simple but enough\n      NOOP[PROP_PROTOTYPE] = proto;\n      return new NOOP();\n    };\n\n    function includes(arrLike, v) {\n      var found = FALSE;\n      each(arrLike, function(item) {\n        if (item === v) {\n          found = TRUE;\n          return FALSE;\n        }\n      });\n      return found;\n    }\n\n    function throwTypeError(msg) {\n      throwError(msg, TypeError);\n    }\n\n    function isElement(el, tagName) {\n      var PROP_TAGNAME = 'tagName';\n      return el && el[PROP_TAGNAME] && el[PROP_TAGNAME][METHOD_TO_UPPER_CASE]() === tagName;\n    }\n\n    var HTML_METER_ELEMENT_CONSTRICTOR_NAME = 'HTML' +\n      METER_TAG_NAME.charAt(0)[METHOD_TO_UPPER_CASE]() +\n      METER_TAG_NAME[METHOD_SLICE](1)[METHOD_TO_LOWER_CASE]() +\n      'Element';\n\n    // ie 8 document.createElement is not a function\n    // ie 7 document.createElement.apply is undefined\n    var createElement = (function(createElement) {\n      return function() {\n        return funcApplyCall(createElement, document, arguments);\n      };\n    })(document[METHOD_CREATE_ELEMENT]);\n\n\n    var nativeToString = funcBindCall(funcToString, funcToString);\n    nativeToString[METHOD_TO_STRING] = nativeToString;\n\n    // cache toStingFunctions\n    var toStingFns = {};\n    function pretendNativeFunction(funcName, func) {\n      func[METHOD_TO_STRING] = toStingFns[funcName] ||\n        (toStingFns[funcName] = (function() {\n          function toString() {\n            return TO_STRING.replace(METHOD_TO_STRING, funcName);\n          }\n          toString[METHOD_TO_STRING] = nativeToString;\n          return toString;\n        })());\n      return func;\n    }\n\n    function getValueDescriptor(value) {\n      return {value: value};\n    }\n\n    var HTMLMeterElement = window[HTML_METER_ELEMENT_CONSTRICTOR_NAME] || (function() {\n      var MSG_ILLEAGE_CONSTRUCTOR = '';\n      try {\n        // TODO: HTMLElement is not a function in ie, even ie >= 9\n        new HTMLElement();\n      } catch (e) {\n        MSG_ILLEAGE_CONSTRUCTOR = e.message;\n      }\n\n      function HTMLMeterElement() {\n        throwTypeError(MSG_ILLEAGE_CONSTRUCTOR);\n      }\n\n      var htmlElementPrototype = (\n        HTMLElement ||\n        meterElement[PROP_CONSTRUCTOR] ||\n        window.Element ||\n        window.Node ||\n        NOOP\n        )[PROP_PROTOTYPE];\n\n      htmlElementPrototype = create(htmlElementPrototype);\n\n      defineProperty(\n        htmlElementPrototype,\n        PROP_CONSTRUCTOR,\n        getValueDescriptor(HTMLMeterElement)\n        );\n\n      HTMLMeterElement[PROP_PROTOTYPE] = htmlElementPrototype;\n      HTMLMeterElement[PROP_PROTO] = htmlElementPrototype;\n\n      return window[HTML_METER_ELEMENT_CONSTRICTOR_NAME] = pretendNativeFunction(\n        HTML_METER_ELEMENT_CONSTRICTOR_NAME,\n        HTMLMeterElement\n      );\n    })();\n\n    // there is no moz/ms/o vendor prefix\n    var MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n\n    meterElement[POLYFILL_FLAG] = VERSION; // for attersAsProps test\n\n    var SUPPORTS_MUTATION_OBSERVER = !!MutationObserver;\n    var SUPPORTS_ADD_EVENT_LISTENER = !!window[METHOD_ADD_EVENT_LISTENER];\n    var SUPPORTS_ATTACH_EVENT = !!window[METHOD_ATTACH_EVENT];\n    // ie <= 8 attributes are same as properties\n    var SUPPORTS_ATTERS_AS_PROPS = meterElement[METHOD_GET_ATTRIBUTE](POLYFILL_FLAG) ===\n      VERSION;\n    var SUPPORTS_PROPERTYCHANGE = 'onpropertychange' in document;\n    var SUPPORTS_DOM_NODE_INSERTED = FALSE;\n    var SUPPORTS_DOM_ATTR_MODIFIED = FALSE;\n\n    var METHOD_DOM_NODE_INSERTED = 'DOMNodeInserted';\n    var METHOD_DOM_ATTR_MODIFIED = 'DOMAttrModified';\n    if (!SUPPORTS_MUTATION_OBSERVER) {\n      var testDiv = createElement(DIV_TAG_NAME);\n      var testChild = createElement(DIV_TAG_NAME);\n\n      on(testDiv, METHOD_DOM_NODE_INSERTED, function() {\n        SUPPORTS_DOM_NODE_INSERTED = TRUE;\n      });\n      on(testDiv, METHOD_DOM_ATTR_MODIFIED, function() {\n        SUPPORTS_DOM_ATTR_MODIFIED = TRUE;\n      });\n\n      testDiv[METHOD_APPEND_CHILD](testChild);\n      testDiv[METHOD_SET_ATTRIBUTE](POLYFILL_FLAG, VERSION);\n\n      testDiv = testChild = NULL;\n    }\n\n    function on(target, eventTypes, listener, useCapture) {\n      each(eventTypes.split(' '), function(type) {\n        if (SUPPORTS_ADD_EVENT_LISTENER) {\n          target[METHOD_ADD_EVENT_LISTENER](type, listener, !!useCapture);\n        } else if (SUPPORTS_ATTACH_EVENT) {\n          target[METHOD_ATTACH_EVENT]('on' + type, listener);\n        } else {\n          target['on' + type] = listener;\n        }\n      });\n    }\n\n    function observe(target, callback, options) {\n      var observer = new MutationObserver(callback);\n      observer.observe(target, options);\n      return observer;\n    }\n\n    var METER_SHADOW_HTML = [\n      DIV_OPENING_TAG + METER_CLASS_PREFIX + 'inner-element\">',\n        DIV_OPENING_TAG + METER_CLASS_PREFIX + 'bar\">',\n          DIV_OPENING_TAG + METER_VALUE_CLASSES[LEVEL_SUBOPTIMUM] + '\" style=\"width: 0%\">',\n          DIV_CLOSING_TAG,\n        DIV_CLOSING_TAG,\n      DIV_CLOSING_TAG\n    ].join('');\n\n    var setTimeout = window.setTimeout;\n    var setInterval = window.setInterval;\n\n    function walkContext(context, tagName, func) {\n      context = context[PROP_LENGTH] ? context : context[METHOD_GET_ELEMENTS_BY_TAG_NAME](tagName);\n      each(context, function(context) {\n        func(context);\n      });\n    }\n\n    function observerAttributes(target, attrs, callback) {\n      if (SUPPORTS_MUTATION_OBSERVER) {\n        observe(target, function(mutations) {\n          each(mutations, function(mutation) {\n            var atrr = mutation.attributeName[METHOD_TO_LOWER_CASE]();\n            callback(target, atrr);\n          });\n        }, {\n          attributes: TRUE,\n          attributeFilter: attrs\n        });\n      } else if (SUPPORTS_DOM_ATTR_MODIFIED) {\n        on(target, METHOD_DOM_ATTR_MODIFIED, function(e) {\n          var attr = e.attrName[METHOD_TO_LOWER_CASE]();\n          if (includes(attrs, attr)) {\n            callback(target, attr);\n          }\n        });\n      } else if (SUPPORTS_PROPERTYCHANGE) {\n        on(target, 'propertychange', function(e) {\n          var prop = e.propertyName[METHOD_TO_LOWER_CASE]();\n          if (includes(attrs, prop)) {\n            callback(target, prop);\n          }\n        });\n      }\n\n      // anything else?\n    }\n\n    function polyfillMeter(context) {\n      if (!isElement(context, METER_TAG_NAME)) {\n        return walkContext(context || allMeters, METER_TAG_NAME, polyfillMeter);\n      }\n\n      var meter = context;\n      if (!meter[POLYFILL_FLAG]) {\n        // ie8 might need clone meter\n        // so meter might be a new node\n        meter = createShadowDom(meter);\n        defineMeterProperties(meter);\n\n        observerAttributes(meter, METER_PROPS, triggerAttrChange);\n        updateMeterStyle(meter);\n      }\n    }\n\n    function updateMeterStyle(meter) {\n      var result = meterCalculator(meter);\n\n      var PROP_CLASS_NAME = 'className';\n      var PROP_STYLE = 'style';\n      var PROP_WIDTH = 'width';\n\n      var valueElement = meter[PROP_FIRST_CHILD][PROP_FIRST_CHILD][PROP_FIRST_CHILD];\n\n      // only update when necessary\n      var currentClassName = valueElement[PROP_CLASS_NAME];\n      var changeClassName = result[PROP_CLASS_NAME];\n      if (currentClassName !== changeClassName) {\n        valueElement[PROP_CLASS_NAME] = changeClassName;\n      }\n\n      var currentWidth = valueElement[PROP_STYLE][PROP_WIDTH];\n      var changeWidth = result.percentage + '%';\n      if (currentWidth !== changeWidth) {\n        valueElement[PROP_STYLE][PROP_WIDTH] = changeWidth;\n      }\n      return meter;\n    }\n\n    function triggerAttrChange(meter, attr) {\n      if (includes(METER_PROPS, attr[METHOD_TO_LOWER_CASE]())) {\n        updateMeterStyle(meter);\n      }\n    }\n\n    function createShadowDom(meter) {\n      if (meter.canHaveChildren === FALSE || meter.canHaveHTML === FALSE) {\n        // ie <= 8 fails on innerHTML created meter\n        var parent = meter.parentNode;\n        if (parent) {\n          var meterClone = createElement(METER_TAG_NAME);\n          assignValues(meterClone, meter);\n          parent.replaceChild(meterClone, meter);\n          meter = meterClone;\n\n          // remove </meter><//meter>\n          var slashMeters = parent[METHOD_GET_ELEMENTS_BY_TAG_NAME]('/' + METER_TAG_NAME);\n          each(slashMeters, function(slashMeter) {\n            parent[METHOD_REMOVE_CHILD](slashMeter);\n          });\n\n          // another way to remove </meter><//meter>\n          // var next = meter;\n          // while (next = next.nextSibling) {\n          //   if (next.tagName[METHOD_TO_UPPER_CASE]() === '/' + METER_TAG_NAME) {\n          //     parent[METHOD_REMOVE_CHILD](next);\n          //   }\n          // }\n        }\n      }\n\n      meter.innerHTML = METER_SHADOW_HTML;\n      return meter;\n    }\n\n    // use common getter & setter\n    function propGetter(prop) {\n      var meter = this;\n      var propValues = {};\n\n      each(propDependencies[prop], function(prop) {\n        propValues[prop] = parseValue(meter[METHOD_GET_ATTRIBUTE](prop));\n      });\n\n      return getPropValue(propValues, prop);\n    }\n\n    // TODO: find right msg by test on a non-finite prop of known element\n    var MSG_NON_FINITE = 'Failed to set the \\'' + PROP_MAX + '\\' property on ' +\n      '\\'' + HTML_METER_ELEMENT_CONSTRICTOR_NAME + '\\'' +\n      ': The provided double value is non-finite.';\n\n    // firefox msg\n    // 'Value being assigned to ' +\n    // HTML_METER_ELEMENT_CONSTRICTOR_NAME + '.' + prop +\n    // ' is not a finite floating-point value.';\n\n    function propSetter(prop, value) {\n      var meter = this;\n      if (!isValidValue(value)) {\n        throwTypeError(MSG_NON_FINITE.replace(PROP_MAX, prop));\n      }\n\n      meter[METHOD_SET_ATTRIBUTE](prop, '' + parseValue(value, 0));\n      return value;\n    }\n\n    function lablesGetter() {\n      var meter = this;\n      var assignedLables = [];\n      var i = 0;\n      var propId = meter[PROP_ID];\n\n      each(allLabels, function(label) {\n        var propFor = label[PROP_FOR];\n\n        if (\n          (label.control === meter) ||\n          (!propFor && label[METHOD_GET_ELEMENTS_BY_TAG_NAME](METER_TAG_NAME)[0] === meter) ||\n          (propFor && propFor === propId)\n          ) {\n          assignedLables[i++] = label;\n        }\n      });\n\n      return assignedLables;\n    }\n\n    function getPropDescriptor(getter, setter) {\n      return {enumerable: TRUE, get: getter, set: setter};\n    }\n\n    function defineMeterProperties(meter) {\n      meter[PROP_PROTO] = HTMLMeterElement.prototype;\n\n      var properties = {};\n\n      if (!SUPPORTS_ATTERS_AS_PROPS) {\n        each(METER_PROPS, function(prop) {\n          properties[prop] = getPropDescriptor(\n            funcBindCall(propGetter, meter, prop),\n            funcBindCall(propSetter, meter, prop)\n            );\n        });\n      }\n\n      properties[PROP_LABELS] = getPropDescriptor(funcBindCall(lablesGetter, meter));\n\n      if (!SUPPORTS_ATTERS_AS_PROPS) {\n        var setAttribute = funcBindCall(meter[METHOD_SET_ATTRIBUTE], meter);\n\n        var methodSetAttribute = pretendNativeFunction(METHOD_SET_ATTRIBUTE, function(attr, value) {\n          setAttribute(attr, value);\n          triggerAttrChange(meter, attr);\n        });\n\n        properties[METHOD_SET_ATTRIBUTE] = getValueDescriptor(methodSetAttribute);\n      }\n\n      if (SUPPORTS_ATTERS_AS_PROPS) {\n        var removeAttribute = funcBindCall(meter[METHOD_REMOVE_ATTRIBUTE], meter);\n\n        var methodRemoveAttribute = pretendNativeFunction(METHOD_REMOVE_ATTRIBUTE, function(attr) {\n          removeAttribute(attr);\n          triggerAttrChange(meter, attr);\n        });\n\n        properties[METHOD_REMOVE_ATTRIBUTE] = getValueDescriptor(methodRemoveAttribute);\n      }\n\n      var METHOD_CLONE_NODE = 'cloneNode';\n      var cloneNode = funcBindCall(meter[METHOD_CLONE_NODE], meter);\n      var methodCloneNode = pretendNativeFunction(METHOD_CLONE_NODE, function(deep) {\n        var clone = cloneNode(FALSE);\n        if (SUPPORTS_ATTERS_AS_PROPS) {\n          clone[METHOD_REMOVE_ATTRIBUTE](POLYFILL_FLAG);\n        }\n        polyfillMeter(clone);\n        return clone;\n      });\n\n      properties[METHOD_CLONE_NODE] = getValueDescriptor(methodCloneNode);\n      properties[POLYFILL_FLAG] = getValueDescriptor(VERSION);\n      if (meter[PROP_CONSTRUCTOR] !== HTMLMeterElement) {\n        // ie <= 10 need define construtor\n        properties[PROP_CONSTRUCTOR] = getValueDescriptor(HTMLMeterElement);\n      }\n\n      for (var prop in properties) {\n        if (properties.hasOwnProperty(prop)) {\n          defineProperty(meter, prop, properties[prop]);\n        }\n      }\n    }\n\n    // overwrite document.createElement\n    document[METHOD_CREATE_ELEMENT] = pretendNativeFunction(METHOD_CREATE_ELEMENT, function() {\n      var el = funcApplyCall(createElement, document, arguments);\n      if (isElement(el, METER_TAG_NAME)) {\n        polyfillMeter(el);\n      }\n      return el;\n    });\n\n    function observerDocument() {\n      var PROP_TARGET = 'target';\n      if (SUPPORTS_MUTATION_OBSERVER) {\n        // observe subtree\n        observe(documentElement, function(mutations) {\n          each(mutations, function(mutation) {\n            polyfillMeter(mutation[PROP_TARGET]);\n          });\n        }, {\n          subtree: TRUE,\n          childList: TRUE\n        });\n      } else {\n        if (SUPPORTS_DOM_NODE_INSERTED) {\n          on(documentElement, METHOD_DOM_NODE_INSERTED, function(e) {\n            polyfillMeter(e[PROP_TARGET]);\n          });\n        } else {\n          setInterval(polyfillMeter, TIMEOUT_FREQUENCY);\n        }\n      }\n    }\n\n    (function() {\n      var isReady = FALSE;\n      var isTop = FALSE;\n\n      function setReady() {\n        isReady = TRUE;\n      }\n\n      function completed() {\n        if (document.readyState === 'complete') {\n          setReady();\n        }\n      }\n\n      try {\n        isTop = isNull(window.frameElement);\n      } catch (_) {}\n\n      if (!SUPPORTS_ADD_EVENT_LISTENER && documentElement.doScroll && isTop) {\n        (function doScroll() {\n          try {\n            documentElement.doScroll();\n            setReady();\n          } catch (_) {\n            setTimeout(doScroll, TIMEOUT_FREQUENCY);\n          }\n        })();\n      }\n\n      on(document, 'DOMContentLoaded', setReady);\n      on(window, 'load', setReady);\n      on(document, 'readystatechange', completed);\n      completed();\n\n      (function polyfillWhenReady() {\n        if (isReady) {\n          polyfillMeter();\n          observerDocument();\n        } else {\n          setTimeout(polyfillWhenReady, TIMEOUT_FREQUENCY);\n        }\n      })();\n    })();\n\n    return polyfillMeter;\n  })();\n\n  meterPolyfill.version = VERSION;\n  meterPolyfill.support = nativeSupport;\n  meterPolyfill.CLASSES = METER_VALUE_CLASSES;\n  meterPolyfill.LEVEL_SUBOPTIMUM = LEVEL_SUBOPTIMUM;\n  meterPolyfill.LEVEL_OPTIMUM = LEVEL_OPTIMUM;\n  meterPolyfill.LEVEL_SUBSUBOPTIMUM = LEVEL_SUBSUBOPTIMUM;\n  meterPolyfill.calc = meterCalculator;\n\n  return meterPolyfill;\n});\n"]}