{"version":3,"sources":["polyfill.min.js"],"names":["root","factory","define","amd","module","exports","meterPolyfill","this","window","throwError","message","constructor","Error","greaterThan","value","low","nearest","high","each","arrLike","func","i","len","PROP_LENGTH","FALSE","isUndefined","obj","isNull","NULL","isValidValue","isFinite","toFloat","parseValue","valueForNull","assignValues","target","source","METER_PROPS","prop","getPropValue","propValues","isNullValue","min","max","PROP_MIN","METER_INITAL_VALUES","PROP_MAX","PROP_LOW","PROP_HIGH","PROP_OPTIMUM","PROP_VALUE","meterCalculator","meter","optimum","percentage","level","LEVEL_OPTIMUM","LEVEL_SUBOPTIMUM","LEVEL_SUBSUBOPTIMUM","isFirefox","className","METER_VALUE_CLASSES","funcApplyCall","oThis","args","apply","METHOD_CALL","arraySliceCall","slice","arguments","arrayConcatCall","concat","funcBindCall","bind","includes","v","found","item","TRUE","throwTypeError","TypeError","pretendNativeFunction","funcName","METHOD_TO_STRING","toStingFns","toString","TO_STRING","replace","nativeToString","getOwnPropertyDescriptor","o","property","objectGetOwnPropertyDescriptor","METHOD_LOOKUP_SETTER","METHOD_LOOKUP_GETTER","descriptor","PROP_GET","PROP_SET","defineProperty","objectDefineProperty","configurable","e","PROP_ENUMERABLE","number","METHOD_DEFINE_SETTER","METHOD_DEFINE_GETTER","isElement","el","tagName","PROP_TAGNAME","METHOD_TO_UPPER_CASE","getErrorMessage","testFunc","defaultMsg","propGetter","propDependencies","METHOD_GET_ATTRIBUTE","propSetter","noFiniteMsgs","METHOD_SET_ATTRIBUTE","lablesGetter","assignedLables","propId","PROP_ID","allLabels","label","propFor","PROP_FOR","control","METHOD_GET_ELEMENTS_BY_TAG_NAME","METER_TAG_NAME","getPropDescriptor","getter","setter","enumerable","get","set","getValueDescriptor","document","navigator","userAgent","indexOf","METHOD_TO_LOWER_CASE","VERSION","NOOP","METER_CLASS_PREFIX","PROP_LABELS","METHOD_CREATE_ELEMENT","meterElement","nativeSupport","Number","parseFloat","PROP_PROTOTYPE","PROP_CONSTRUCTOR","PROP_PROTO","METHOD_APPLY","METHOD_CONCAT","METHOD_SLICE","oObject","Object","arrayPrototype","Array","funcPrototype","Function","funcToString","funcToBind","create","proto","getElementById","HTMLElement","Element","Node","documentElement","LABEL_TAG_NAME","allMeters","createElement","HTMLLabelElement","PROP_CONTROL","HTMLLabelElementPrototype","htmlFor","HTML_METER_ELEMENT_INTERFACE","charAt","PROP_VOLUME","PROP_PLACEHOLDER","errorMsgNonFinite","Audio","MSG_NON_FINITE","msgs","props","HTMLMeterElement","MSG_ILLEAGE_CONSTRUCTOR","HTMLMeterElementPrototype","console","log","labelsDescriptor","on","eventTypes","listener","useCapture","split","type","SUPPORTS_ADD_EVENT_LISTENER","METHOD_ADD_EVENT_LISTENER","SUPPORTS_ATTACH_EVENT","METHOD_ATTACH_EVENT","observe","callback","options","observer","MutationObserver","walkContext","context","observerAttributes","attrs","SUPPORTS_MUTATION_OBSERVER","mutations","mutation","atrr","attributeName","attributes","attributeFilter","SUPPORTS_DOM_ATTR_MODIFIED","METHOD_DOM_ATTR_MODIFIED","attr","attrName","SUPPORTS_PROPERTYCHANGE","propertyName","polyfillMeter","POLYFILL_FLAG","defineMeterProperties","updateMeterStyle","result","PROP_CLASS_NAME","PROP_STYLE","PROP_WIDTH","valueElement","PROP_FIRST_CHILD","currentClassName","changeClassName","currentWidth","changeWidth","triggerAttrChange","properties","hasOwnProperty","observerDocument","PROP_TARGET","subtree","childList","SUPPORTS_DOM_NODE_INSERTED","METHOD_DOM_NODE_INSERTED","setInterval","TIMEOUT_FREQUENCY","METHOD_REMOVE_CHILD","METHOD_REMOVE_ATTRIBUTE","METHOD_APPEND_CHILD","DIV_TAG_NAME","DIV_OPENING_TAG","DIV_CLOSING_TAG","WebKitMutationObserver","SUPPORTS_ATTERS_AS_PROPS","testDiv","testChild","METER_SHADOW_HTML","join","setTimeout","descriptors","prototype","setReady","isReady","completed","readyState","isTop","frameElement","_","doScroll","polyfillWhenReady","version","support","CLASSES","calc"],"mappings":"CACA,SAAUA,EAAMC,GACd,YAEsB,mBAAXC,SAAyBA,OAAOC,IACzCD,OAAOD,EAAQD,IACY,gBAAXI,SAAuBA,OAAOC,QAC9CD,OAAOC,QAAUJ,EAAQD,GAEzBA,EAAKM,cAAgBL,EAAQD,IAE9BO,KAAM,SAASC,GAChB,YAWA,SAASC,GAAWC,EAASC,GAC3B,KAAM,KAAKA,GAAeC,OAAOF,GAgEnC,QAASG,GAAYC,EAAOC,GAI1B,MAHID,GAAQC,IACVD,EAAQC,GAEHD,EAGT,QAASE,GAAQF,EAAOC,EAAKE,GAS3B,MARIH,GAAQC,IACVD,EAAQC,GAGND,EAAQG,IACVH,EAAQG,GAGHH,EAGT,QAASI,GAAKC,EAASC,GAGrB,IAFA,GAAIC,GAAI,EACJC,EAAMH,EAAQI,GACXF,EAAIC,GACLF,EAAKD,EAAQE,GAAIA,KAAOG,EADdH,MAOlB,QAASI,GAAYC,GACnB,MAAsB,mBAARA,GAGhB,QAASC,GAAOD,GACd,MAAOA,KAAQE,EAGjB,QAASC,GAAaH,GACpB,MAAOC,GAAOD,IAAQI,SAASC,GAAQL,IAGzC,QAASM,GAAWlB,EAAOmB,GAIzB,MAHIR,GAAYQ,KACdA,EAAeL,IAETC,EAAaf,IAAUa,EAAOb,GACpCmB,EACAF,GAAQjB,GAGZ,QAASoB,GAAaC,EAAQC,GAI5B,MAHAlB,GAAKmB,EAAa,SAASC,GACzBH,EAAOG,GAAQN,EAAWI,EAAOE,MAE5BH,EAGT,QAASI,GAAaC,EAAYF,GAChC,GAAIxB,GAAQ0B,EAAWF,GACnBG,EAAcd,EAAOb,GACrB4B,EACAC,CACJ,QAAQL,GACN,IAAKM,GACH9B,EAAQ2B,EACNI,EAAoBD,GACpB9B,CACF,MAEF,KAAKgC,GACHhC,EAAQ2B,EACNI,EAAoBC,GACpBhC,EACF4B,EAAMH,EAAaC,EAAYI,GAC/B9B,EAAQD,EAAYC,EAAO4B,EAC3B,MAEF,KAAKK,GACHL,EAAMH,EAAaC,EAAYI,GAC/B9B,EAAQ2B,EACNC,EACA1B,EAAQF,EAAO4B,EAAKH,EAAaC,EAAYM,GAC/C,MAEF,KAAKE,GACHL,EAAMJ,EAAaC,EAAYM,GAC/BhC,EAAQ2B,EACNE,EACA3B,EAAQF,EAAOyB,EAAaC,EAAYO,GAAWJ,EACrD,MAEF,KAAKM,GACHP,EAAMH,EAAaC,EAAYI,GAC/BD,EAAMJ,EAAaC,EAAYM,GAC/BhC,EAAQ2B,GACLE,EAAMD,GAAO,EAAIA,EAClB1B,EAAQF,EAAO4B,EAAKC,EACtB,MAEF,KAAKO,GACHpC,EAAQ2B,EACNI,EAAoBK,GACpBpC,EACF4B,EAAMH,EAAaC,EAAYI,GAC/BD,EAAMJ,EAAaC,EAAYM,GAC/BhC,EAAQE,EAAQF,EAAO4B,EAAKC,GAMhC,MAAO7B,GAGT,QAASqC,GAAgBC,GACvB,GAAIZ,GAAaN,KAAiBkB,GAE9BV,EAAMH,EAAaC,EAAYI,GAC/BD,EAAMJ,EAAaC,EAAYM,GAC/B/B,EAAMwB,EAAaC,EAAYO,GAC/B9B,EAAOsB,EAAaC,EAAYQ,GAChCK,EAAUd,EAAaC,EAAYS,GACnCnC,EAAQyB,EAAaC,EAAYU,GAEjCI,EAAaZ,IAAQC,EAAM,GAAK7B,EAAQ4B,IAAQC,EAAMD,GAAO,IAC7Da,EAAQC,CAmDZ,OAhDEvC,KAAS0B,GACT5B,IAAQ2B,GACPW,GAAWtC,GAAOsC,GAAWpC,GAG3BF,GAAOsC,GAAWvC,EAAQC,GAC1BA,EAAMsC,GAAWvC,EAAQC,GACzBE,EAAOoC,GAAWvC,EAAQG,GAC1BA,GAAQoC,GAAWvC,EAAQG,KAE5BsC,EAAQE,GAED1C,IAAQE,GAEdF,GAAOsC,GAAWvC,EAAQC,GAC1BE,EAAOoC,GAAWvC,EAAQG,KAE3BsC,EAAQG,GAEDL,EAAUtC,EACfD,EAAQC,GAAOD,GAASG,EAC1BsC,EAAQE,EACC3C,EAAQG,IACjBsC,EAAQG,GAEDL,EAAUpC,IACfH,GAASC,GAAOD,EAAQG,EAC1BsC,EAAQE,EACC3C,EAAQC,IACjBwC,EAAQG,IAMRC,IACEjB,IAAQC,IACVW,EAAa,MAIVD,EAAUpC,GAAQH,IAAUG,GAC5BoC,EAAUtC,GAAOD,IAAUC,KAE9BwC,EAAQE,KAKVf,IAAKA,EACLC,IAAKA,EACL5B,IAAKA,EACLE,KAAMA,EACNoC,QAASA,EACTvC,MAAOA,EACPwC,WAAYA,EACZC,MAAOA,EACPK,UAAWC,EAAoBN,IA6BnC,QAASO,GAAc1C,EAAM2C,EAAOC,GAClC,MAAOC,IAAMC,IAAa9C,EAAM2C,EAAOC,GAGzC,QAASG,GAAehD,GACtB,GAAI6C,GAAOF,EAAcM,GAAOC,WAAY,GAC5C,OAAOP,GAAcM,GAAOjD,EAAS6C,GAGvC,QAASM,GAAgBnD,GACvB,GAAI6C,GAAOG,EAAeE,UAAW,EACrC,OAAOP,GAAcS,GAAQpD,EAAS6C,GAaxC,QAASQ,GAAapD,GACpB,MAAO0C,GAAcW,GAAMrD,EAAM+C,EAAeE,UAAW,IAS7D,QAASK,GAASvD,EAASwD,GACzB,GAAIC,GAAQpD,CAOZ,OANAN,GAAKC,EAAS,SAAS0D,GACrB,GAAIA,IAASF,EAEX,MADAC,GAAQE,EACDtD,IAGJoD,EAGT,QAASG,GAAerE,GACtB,KAAM,IAAIsE,WAAUtE,GAStB,QAASuE,GAAsBC,EAAU9D,GASvC,MARAA,GAAK+D,IAAoBC,GAAWF,KACjCE,GAAWF,GAAY,WACtB,QAASG,KACP,MAAOC,IAAUC,QAAQJ,GAAkBD,GAG7C,MADAG,GAASF,IAAoBK,GACtBH,MAEJjE,EAKT,QAASqE,GAAyBC,EAAGC,GACnC,GAAIC,GACF,MAAOA,IAA+BF,EAAGC,EAEzC,IAAIE,GAAuB,kBACvBC,EAAuB,mBACvBC,IACAD,KAAwBJ,GAC1BK,EAAWC,IAAYN,EAAEI,GAAsBH,GAE/CI,EAAW7C,GAAc6C,EAAW7C,GAElC2C,IAAwBH,KAC1BK,EAAWE,IAAYP,EAAEG,GAAsBF,IAKrD,QAASO,GAAeR,EAAGC,EAAUI,GACnC,GAAII,GAAsB,CACxBJ,EAAWK,aAAetB,CAE1B,KACE,MAAOqB,IAAqBT,EAAGC,EAAUI,GACzC,MAAOM,GACP,GAAIC,GAAkB,YACtB,IAAIP,EAAWO,IAAoBD,EAAEE,UAAW,WAE9C,MADAR,GAAWO,GAAmB9E,EACvB2E,GAAqBT,EAAGC,EAAUI,QAGxC,CACL,GAAIS,GAAuB,mBACvBC,EAAuB,kBACvBV,GAAWC,MACTS,IAAwBf,GAC1BA,EAAEe,GAAsBd,EAAUI,EAAWC,KAE7CN,EAAEC,GAAYnB,EAAauB,EAAWC,IAAWN,IAIjDK,EAAWE,KAAaO,IAAwBd,IAClDA,EAAEc,GAAsBb,EAAUI,EAAWE,KAG3CF,EAAW7C,KACbwC,EAAEC,GAAYI,EAAW7C,KA8B/B,QAASwD,GAAUC,EAAIC,GACrB,GAAIC,GAAe,SACnB,OAAOF,IAAMA,EAAGE,IAAiBF,EAAGE,GAAcC,OAA4BF,EAwBhF,QAASG,GAAgBC,EAAUC,GACjC,IACED,IACA,MAAOX,GACP,MAAOA,GAAE3F,QAEX,MAAOuG,GAkDT,QAASC,GAAW5E,GAClB,GAAIc,GAAQ7C,KACRiC,IAMJ,OAJAtB,GAAKiG,GAAiB7E,GAAO,SAASA,GACpCE,EAAWF,GAAQN,EAAWoB,EAAMgE,IAAsB9E,MAGrDC,EAAaC,EAAYF,GAGlC,QAAS+E,GAAW/E,EAAMxB,GACxB,GAAIsC,GAAQ7C,IAMZ,OALKsB,GAAaf,IAChBiE,EAAeuC,GAAahF,IAG9Bc,EAAMmE,IAAsBjF,EAAM,GAAKN,EAAWlB,EAAO,IAClDA,EAGT,QAAS0G,KACP,GAAIpE,GAAQ7C,KACRkH,KACApG,EAAI,EACJqG,EAAStE,EAAMuE,GAcnB,OAZAzG,GAAK0G,GAAW,SAASC,GACvB,GAAIC,GAAUD,EAAME,KAGjBF,EAAMG,UAAY5E,IACjB0E,GAAWD,EAAMI,IAAiCC,GAAgB,KAAO9E,GAC1E0E,GAAWA,IAAYJ,KAExBD,EAAepG,KAAOwG,KAInBJ,EAGT,QAASU,GAAkBC,EAAQC,GACjC,OAAQC,WAAYxD,EAAMyD,IAAKH,EAAQI,IAAKH,GAG9C,QAASI,GAAmB3H,GAC1B,OAAQA,MAAOA,GAnjBjB,GAAI4H,GAAWlI,EAAOkI,QAajBA,IACHjI,EAAW,oDAGb,IAAIkD,GAAYnD,EAAOmI,UAAUC,UAAUC,QAAQ,YAAa,EAE5D/B,EAAuB,cACvBgC,EAAuB,cAEvBZ,EAAiB,YACjBa,EAAU,QAGVC,EAAO,aACPlE,GAAO,EACPtD,GAAQ,EACRI,EAAO,KAEP4B,EAAgB,EAChBC,EAAmB,EACnBC,EAAsB,EAEtBuF,EAAqBf,EAAeY,KAA0B,IAC9DjF,IACJA,GAAoBL,GAAiByF,EAAqB,gBAC1DpF,EAAoBJ,GAAoBwF,EAAqB,mBAC7DpF,EAAoBH,GAAuBuF,EAAqB,sBAEhE,IAAIrG,GAAW,MACXE,EAAW,MACXC,EAAW,MACXC,EAAY,OACZE,EAAa,QACbD,EAAe,UACfiG,EAAc,SAEd7G,GAAeO,EAAUE,EAAUC,EAAUC,EAAWC,EAAcC,GAEtEL,GACFH,IAAK,EACLC,IAAK,EACL7B,MAAO,GAKLS,EAAc,SACd4H,EAAwB,gBAExBC,GAAeV,EAASS,GAAuBjB,GAC/CmB,GAAgBD,GAAatG,KAAcD,EAAoBC,GAE/Df,GAAUuH,OAAOC,YAAcA,WAsM/BC,GAAiB,YACjBC,GAAmB,cACnBC,GAAa,YAEbxF,GAAc,OACdyF,GAAe,QACfC,GAAgB,SAChBC,GAAe,QACf1E,GAAmB,WAEnB2E,GAAUC,OACVC,GAAiBC,MAAMT,IACvBU,GAAgBC,SAASX,IAGzBrD,GAAuB2D,GAAQ5D,eAC/BN,GAAiCkE,GAAQrE,yBAEzCrB,GAAQ4F,GAAeH,IACvB5F,GAAQiG,GAAcP,IACtBpF,GAASyF,GAAeJ,IAExBQ,GAAeF,GAAc/E,IAC7BG,GAAY,GAAK8E,GAiBjB3F,GAAOyF,GAAczF,MAAQ,SAASV,GACxC,GAAIC,GAAOG,EAAeE,UAAW,GACjCgG,EAAa9J,IACjB,OAAO,YAEL,MADAyD,GAAOM,EAAgBN,EAAMK,WACtBP,EAAcuG,EAAYtG,EAAOC,KAQxCsG,GAASR,GAAQQ,QAAU,SAASC,GAGtC,MADAvB,GAAKQ,IAAkBe,EAChB,GAAIvB,IAmBTxD,GAAiBhB,EAAa4F,GAAcA,GAChD5E,IAAeL,IAAoBK,EAGnC,IAAIJ,OAaAY,GAAW,MACXC,GAAW,MAsDX0B,GAAU,KACVI,GAAW,UAEXE,GAAkC,uBAClCV,GAAuB,eAEvBiD,GAAiBhG,EAAakE,EAAS8B,eAAgB9B,GACvD+B,GAAcjK,EAAOiK,aAAejK,EAAOkK,SAAWlK,EAAOmK,MAAQ3B,EACrE4B,GAAkBlC,EAASkC,gBAE3BC,GAAiB,QAEjBjD,GAAYgD,GAAgB3C,IAAiC4C,IAC7DC,GAAYF,GAAgB3C,IAAiCC,GAS7D6C,GAAgBvG,EAAakE,EAASS,GAAwBT,IAQlE,SAAUsC,GACR,GAAIC,GAAe,UACfC,EAA4BF,GAAoBA,EAAiBxB,GACrE,IAAK0B,EAAL,CAGA,GAAInF,GAAaN,EAAyByF,EAA2BD,EAChElF,IACHG,EAAegF,EAA2BD,EAAc9C,EAAkB,WACxE,GAAIN,GAAQtH,KACR4K,EAAUtD,EAAME,GACpB,OAAIoD,GACKX,GAAeW,GAGjB,UAGV3K,EAAOwK,iBAWV,IAAII,IAA+B,OACjClD,EAAemD,OAAO,GAAGvE,KACzBoB,EAAe2B,IAAc,GAAGf,KAChC,UAEExB,GAAe,WAIjB,GAAIgE,GAAc,SACdC,EAAmB,SACnBC,EAAoBzE,EAAgB,WAClC0E,SACF,GAAIA,QAAQH,GAAe,MAE5BF,GAA+B,IAAME,EAAc,UAClDI,EAAiBF,EAChBjG,QAAQ,mBAAoB6F,IAC5B7F,QAAQ+F,EAAaC,GAEtBI,IAIJ,OAHAzK,GAAKmB,EAAa,SAASC,GACzBqJ,EAAKrJ,GAAQoJ,EAAenG,QAAQgG,EAAkBjJ,KAEjDqJ,KAILxE,GAAmB,WACrB,GAAIyE,KAYJ,OAXAA,GAAMhJ,MACNgJ,EAAM9I,IAAaF,GACnBgJ,EAAM7I,GACJ6I,EAAM3I,GACN2I,EAAM1I,IACLN,EAAUE,GACb8I,EAAM5I,IAAcJ,EAAUE,EAAUC,GAExC7B,EAAKmB,EAAa,SAASC,GACzBsJ,EAAMtJ,GAAQgC,EAAgBsH,EAAMtJ,IAAQA,MAEvCsJ,KAILxE,GAAuB,eAoDvByE,GAAmB,SAAUA,GAC/B,GAAIC,GAA0B/E,EAAgB,WAC5C0D,IAAe,GAAIA,KAClB,sBAEHoB,GAAmBA,IAAqBrL,EAAO4K,IAAgC,WAC7ErG,EAAe+G,IAGjB,IAAIC,GAA4BF,EAAiBrC,GAEjD,MADAwC,SAAQC,IAAIF,EAA0BtC,KACjC,OASL,IAAIyC,IAyBH1L,EAAO4K,KAEN9K,GAAgB8I,GAAaK,MAAsBoC,GAAmB7C,EAAO,WAqD/E,QAASmD,GAAGhK,EAAQiK,EAAYC,EAAUC,GACxCpL,EAAKkL,EAAWG,MAAM,KAAM,SAASC,GAC/BC,EACFtK,EAAOuK,GAA2BF,EAAMH,IAAYC,GAC3CK,EACTxK,EAAOyK,GAAqB,KAAOJ,EAAMH,GAEzClK,EAAO,KAAOqK,GAAQH,IAK5B,QAASQ,GAAQ1K,EAAQ2K,EAAUC,GACjC,GAAIC,GAAW,GAAIC,GAAiBH,EAEpC,OADAE,GAASH,QAAQ1K,EAAQ4K,GAClBC,EAeT,QAASE,GAAYC,EAASvG,EAASxF,GACrC+L,EAAUA,EAAQ5L,GAAe4L,EAAUA,EAAQlF,IAAiCrB,GACpF1F,EAAKiM,EAAS,SAASA,GACrB/L,EAAK+L,KAIT,QAASC,GAAmBjL,EAAQkL,EAAOP,GACrCQ,EACFT,EAAQ1K,EAAQ,SAASoL,GACvBrM,EAAKqM,EAAW,SAASC,GACvB,GAAIC,GAAOD,EAASE,cAAc5E,IAClCgE,GAAS3K,EAAQsL,OAGnBE,WAAY7I,EACZ8I,gBAAiBP,IAEVQ,EACT1B,EAAGhK,EAAQ2L,GAA0B,SAASzH,GAC5C,GAAI0H,GAAO1H,EAAE2H,SAASlF,IAClBpE,GAAS2I,EAAOU,IAClBjB,EAAS3K,EAAQ4L,KAGZE,GACT9B,EAAGhK,EAAQ,iBAAkB,SAASkE,GACpC,GAAI/D,GAAO+D,EAAE6H,aAAapF,IACtBpE,GAAS2I,EAAO/K,IAClBwK,EAAS3K,EAAQG,KAQzB,QAAS6L,GAAchB,GAErB,IAAKzG,EAAUyG,EAASjF,GACtB,MAAOgF,GAAYC,GAAWrC,GAAW5C,EAAgBiG,EAG3D,IAAI/K,GAAQ+J,CACP/J,GAAMgL,KACTlI,EAAe9C,EAAOgL,EAAe3F,EAAmBM,IAExDsF,EAAsBjL,GACxB4I,QAAQC,IAAI7I,IAMd,QAASkL,GAAiBlL,GACxB,GAAImL,GAASpL,EAAgBC,GAEzBoL,EAAkB,YAClBC,EAAa,QACbC,EAAa,QAEbC,EAAevL,EAAMwL,GAAkBA,GAAkBA,GAGzDC,EAAmBF,EAAaH,GAChCM,EAAkBP,EAAOC,EACzBK,KAAqBC,IACvBH,EAAaH,GAAmBM,EAGlC,IAAIC,GAAeJ,EAAaF,GAAYC,GACxCM,EAAcT,EAAOjL,WAAa,GAItC,OAHIyL,KAAiBC,IACnBL,EAAaF,GAAYC,GAAcM,GAElC5L,EAGT,QAAS6L,GAAkB7L,EAAO2K,GAC5BrJ,EAASrC,EAAa0L,EAAKjF,OAC7BwF,EAAiBlL,GAcrB,QAASiL,GAAsBjL,GAC7B,GAAI2I,GAA4BF,GAAiBrC,IAE7C0F,IA6CJA,GAAWd,GAAiB3F,EAAmBM,EAQ/C,KAAK,GAAIzG,KAAQ4M,GACXA,EAAWC,eAAe7M,IAC5B4D,EAAe9C,EAAOd,EAAM4M,EAAW5M,GAI3Cc,GAAMsG,IAAcqC,EAYtB,QAASqD,KACP,GAAIC,GAAc,QACd/B,GAEFT,EAAQjC,GAAiB,SAAS2C,GAChCrM,EAAKqM,EAAW,SAASC,GACvBW,EAAcX,EAAS6B,QAGzBC,QAASxK,EACTyK,UAAWzK,IAGT0K,EACFrD,EAAGvB,GAAiB6E,EAA0B,SAASpJ,GACrD8H,EAAc9H,EAAEgJ,MAGlBK,GAAYvB,EAAewB,GA1QjC,GAAIvB,GAAgB,YAEhBwB,EAAsB,cACtBC,EAA0B,kBAC1BC,EAAsB,cACtBpD,EAA4B,mBAC5BE,EAAsB,cACtBgC,EAAmB,aAEnBmB,EAAe,MAEfC,EAAkB,eAClBC,EAAkB,SAElBN,EAAoB,GAGpB1C,EAAmBzM,EAAOyM,kBAAoBzM,EAAO0P,sBACzD9G,IAAagF,GAAiBrF,CAE9B,IAAIuE,KAA+BL,EAC/BR,IAAgCjM,EAAOkM,GACvCC,IAA0BnM,EAAOoM,GAEjCuD,EAA2B/G,GAAahC,IAAsBgH,KAChErF,EACEkF,EAA0B,oBAAsBvF,GAChD8G,EAA6BhO,EAC7BqM,EAA6BrM,EAG7BiO,EAA2B,kBAC3B3B,GAA2B,iBAC/B,KAAKR,EAA4B,CAC/B,GAAI8C,IAAUrF,GAAcgF,GACxBM,GAAYtF,GAAcgF,EAE9B5D,GAAGiE,GAASX,EAA0B,WACpCD,EAA6B1K,IAE/BqH,EAAGiE,GAAStC,GAA0B,WACpCD,EAA6B/I,IAG/BsL,GAAQN,GAAqBO,IAC7BD,GAAQ7I,IAAsB6G,EAAerF,GAE7CqH,GAAUC,GAAYzO,EAqBxB,GAAI0O,KACFN,EAAkB/G,EAAqB,kBACrC+G,EAAkB/G,EAAqB,QACrC+G,EAAkBnM,EAAoBJ,GAAoB,uBAC1DwM,EACFA,EACFA,GACAM,KAAK,IAEHC,GAAahQ,EAAOgQ,WACpBd,GAAclP,EAAOkP,YAsFrBe,GAAc,SAAU1E,GAC1B,GAAI0E,KAKJ,OAJAvP,GAAKmB,EAAa,SAASC,GACzBmO,EAAYnO,GAAQmD,EAAyBsG,EAA2BzJ,KAE1EmO,EAAYvH,GAAezD,EAAyBsG,EAA2B7C,GACxEuH,GACN5E,GAAiB6E,UAgJpB,OA3EAhI,GAASS,GAAyBlE,EAAsBkE,EAAuB,WAC7E,GAAIxC,GAAK7C,EAAciH,GAAerC,EAAUrE,UAIhD,OAHIqC,GAAUC,EAAIuB,IAChBiG,EAAcxH,GAETA,IA0BT,WAIE,QAASgK,KACPC,EAAU9L,EAGZ,QAAS+L,KACqB,aAAxBnI,EAASoI,YACXH,IATJ,GAAIC,GAAUpP,EACVuP,EAAQvP,CAYZ,KACEuP,EAAQpP,EAAOnB,EAAOwQ,cACtB,MAAOC,KAEJxE,GAA+B7B,GAAgBsG,UAAYH,IAC9D,QAAUG,KACR,IACEtG,GAAgBsG,WAChBP,IACA,MAAOM,GACPT,GAAWU,EAAUvB,OAK3BxD,EAAGzD,EAAU,mBAAoBiI,GACjCxE,EAAG3L,EAAQ,OAAQmQ,GACnBxE,EAAGzD,EAAU,mBAAoBmI,GACjCA,IAEA,QAAUM,KACJP,GACFzC,IACAiB,KAEAoB,GAAWW,EAAmBxB,SAK7BxB,IAYT,OARA7N,IAAc8Q,QAAUrI,EACxBzI,GAAc+Q,QAAUhI,GACxB/I,GAAcgR,QAAUzN,EACxBvD,GAAcmD,iBAAmBA,EACjCnD,GAAckD,cAAgBA,EAC9BlD,GAAcoD,oBAAsBA,EACpCpD,GAAciR,KAAOpO,EAEd7C","file":"polyfill.min.js","sourcesContent":["/* globals define: true, module: true*/\n(function(root, factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    define(factory(root));\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory(root);\n  } else {\n    root.meterPolyfill = factory(root);\n  }\n})(this, function(window) {\n  'use strict';\n\n  var document = window.document;\n\n  /**\n   * throw Error\n   * @private\n   * @param  {String} message Error message\n   * @param  {Error} constructor Error constructor\n   * @return {Void}\n   */\n  function throwError(message, constructor) {\n    throw new (constructor || Error)(message);\n  }\n\n  if (!document) {\n    throwError('meter-polyfill requires a window with a document.');\n  }\n\n  var isFirefox = window.navigator.userAgent.indexOf('Firefox') > -1;\n\n  var METHOD_TO_UPPER_CASE = 'toUpperCase';\n  var METHOD_TO_LOWER_CASE = 'toLowerCase';\n\n  var METER_TAG_NAME = 'FAKEMETER';\n  var VERSION = '1.6.1';\n\n  /* eslint no-empty-function: 0 */\n  var NOOP = function() {};\n  var TRUE = true;\n  var FALSE = false;\n  var NULL = null;\n\n  var LEVEL_OPTIMUM = 1;\n  var LEVEL_SUBOPTIMUM = 2;\n  var LEVEL_SUBSUBOPTIMUM = 3;\n\n  var METER_CLASS_PREFIX = METER_TAG_NAME[METHOD_TO_LOWER_CASE]() + '-';\n  var METER_VALUE_CLASSES = {};\n  METER_VALUE_CLASSES[LEVEL_OPTIMUM] = METER_CLASS_PREFIX + 'optimum-value';\n  METER_VALUE_CLASSES[LEVEL_SUBOPTIMUM] = METER_CLASS_PREFIX + 'suboptimum-value';\n  METER_VALUE_CLASSES[LEVEL_SUBSUBOPTIMUM] = METER_CLASS_PREFIX + 'even-less-good-value';\n\n  var PROP_MIN = 'min';\n  var PROP_MAX = 'max';\n  var PROP_LOW = 'low';\n  var PROP_HIGH = 'high';\n  var PROP_VALUE = 'value';\n  var PROP_OPTIMUM = 'optimum';\n  var PROP_LABELS = 'labels';\n\n  var METER_PROPS = [PROP_MIN, PROP_MAX, PROP_LOW, PROP_HIGH, PROP_OPTIMUM, PROP_VALUE];\n\n  var METER_INITAL_VALUES = {\n    min: 0,\n    max: 1,\n    value: 0\n  };\n\n  // var PRECISION = isFirefox ? 16 : 6; // firefox and chrome use different precision\n\n  var PROP_LENGTH = 'length';\n  var METHOD_CREATE_ELEMENT = 'createElement';\n\n  var meterElement = document[METHOD_CREATE_ELEMENT](METER_TAG_NAME);\n  var nativeSupport = meterElement[PROP_MAX] === METER_INITAL_VALUES[PROP_MAX];\n\n  var toFloat = Number.parseFloat || parseFloat;\n\n  // function lessThan(value, high) {\n  //   if (value > high) {\n  //     value = high;\n  //   }\n  //   return value;\n  // }\n\n  function greaterThan(value, low) {\n    if (value < low) {\n      value = low;\n    }\n    return value;\n  }\n\n  function nearest(value, low, high) {\n    if (value < low) {\n      value = low;\n    }\n\n    if (value > high) {\n      value = high;\n    }\n\n    return value;\n  }\n\n  function each(arrLike, func) {\n    var i = 0;\n    var len = arrLike[PROP_LENGTH];\n    for (; i < len; i++) {\n      if (func(arrLike[i], i) === FALSE) {\n        break;\n      }\n    }\n  }\n\n  function isUndefined(obj) {\n    return typeof obj === 'undefined';\n  }\n\n  function isNull(obj) {\n    return obj === NULL;\n  }\n\n  function isValidValue(obj) {\n    return isNull(obj) || isFinite(toFloat(obj));\n  }\n\n  function parseValue(value, valueForNull) {\n    if (isUndefined(valueForNull)) {\n      valueForNull = NULL;\n    }\n    return !isValidValue(value) || isNull(value) ?\n      valueForNull :\n      toFloat(value);\n  }\n\n  function assignValues(target, source) {\n    each(METER_PROPS, function(prop) {\n      target[prop] = parseValue(source[prop]);\n    });\n    return target;\n  }\n\n  function getPropValue(propValues, prop) {\n    var value = propValues[prop];\n    var isNullValue = isNull(value);\n    var min;\n    var max;\n    switch (prop) {\n      case PROP_MIN:\n        value = isNullValue ?\n          METER_INITAL_VALUES[PROP_MIN] :\n          value;\n        break;\n\n      case PROP_MAX:\n        value = isNullValue ?\n          METER_INITAL_VALUES[PROP_MAX] :\n          value;\n        min = getPropValue(propValues, PROP_MIN);\n        value = greaterThan(value, min);\n        break;\n\n      case PROP_LOW:\n        min = getPropValue(propValues, PROP_MIN);\n        value = isNullValue ?\n          min :\n          nearest(value, min, getPropValue(propValues, PROP_MAX));\n        break;\n\n      case PROP_HIGH:\n        max = getPropValue(propValues, PROP_MAX);\n        value = isNullValue ?\n          max :\n          nearest(value, getPropValue(propValues, PROP_LOW), max);\n        break;\n\n      case PROP_OPTIMUM:\n        min = getPropValue(propValues, PROP_MIN);\n        max = getPropValue(propValues, PROP_MAX);\n        value = isNullValue ?\n          (max - min) / 2 + min :\n          nearest(value, min, max);\n        break;\n\n      case PROP_VALUE:\n        value = isNullValue ?\n          METER_INITAL_VALUES[PROP_VALUE] :\n          value;\n        min = getPropValue(propValues, PROP_MIN);\n        max = getPropValue(propValues, PROP_MAX);\n        value = nearest(value, min, max);\n        break;\n\n      default:\n        break;\n    }\n    return value;\n  }\n\n  function meterCalculator(meter) {\n    var propValues = assignValues({}, meter);\n\n    var min = getPropValue(propValues, PROP_MIN);\n    var max = getPropValue(propValues, PROP_MAX);\n    var low = getPropValue(propValues, PROP_LOW);\n    var high = getPropValue(propValues, PROP_HIGH);\n    var optimum = getPropValue(propValues, PROP_OPTIMUM);\n    var value = getPropValue(propValues, PROP_VALUE);\n\n    var percentage = min === max ? 0 : (value - min) / (max - min) * 100;\n    var level = LEVEL_OPTIMUM;\n\n    if (\n      high === max ||\n      low === min ||\n      (optimum >= low && optimum <= high)\n    ) {\n      if (\n        (low <= optimum && value < low) ||\n        (low > optimum && value > low) ||\n        (high < optimum && value < high) ||\n        (high >= optimum && value > high)\n      ) {\n        level = LEVEL_SUBOPTIMUM;\n      }\n    } else if (low === high) {\n      if (\n        (low <= optimum && value < low) ||\n        (high > optimum && value > high)\n      ) {\n        level = LEVEL_SUBSUBOPTIMUM;\n      }\n    } else if (optimum < low) {\n      if (value > low && value <= high) {\n        level = LEVEL_SUBOPTIMUM;\n      } else if (value > high) {\n        level = LEVEL_SUBSUBOPTIMUM;\n      }\n    } else if (optimum > high) {\n      if (value >= low && value < high) {\n        level = LEVEL_SUBOPTIMUM;\n      } else if (value < low) {\n        level = LEVEL_SUBSUBOPTIMUM;\n      }\n    }\n\n    // firefox show diffently from chrome\n    // when value === high/low or min === max\n    if (isFirefox) {\n      if (min === max) {\n        percentage = 100;\n      }\n\n      if (\n          (optimum > high && value === high) ||\n          (optimum < low && value === low)\n       ) {\n        level = LEVEL_SUBOPTIMUM;\n      }\n    }\n\n    return {\n      min: min,\n      max: max,\n      low: low,\n      high: high,\n      optimum: optimum,\n      value: value,\n      percentage: percentage,\n      level: level,\n      className: METER_VALUE_CLASSES[level]\n    };\n  }\n\n  var PROP_PROTOTYPE = 'prototype';\n  var PROP_CONSTRUCTOR = 'constructor';\n  var PROP_PROTO = '__proto__';\n\n  var METHOD_CALL = 'call';\n  var METHOD_APPLY = 'apply';\n  var METHOD_CONCAT = 'concat';\n  var METHOD_SLICE = 'slice';\n  var METHOD_TO_STRING = 'toString';\n\n  var oObject = Object;\n  var arrayPrototype = Array[PROP_PROTOTYPE];\n  var funcPrototype = Function[PROP_PROTOTYPE];\n  // var objPrototype = oObject[PROP_PROTOTYPE];\n\n  var objectDefineProperty = oObject.defineProperty;\n  var objectGetOwnPropertyDescriptor = oObject.getOwnPropertyDescriptor;\n\n  var slice = arrayPrototype[METHOD_SLICE];\n  var apply = funcPrototype[METHOD_APPLY];\n  var concat = arrayPrototype[METHOD_CONCAT];\n\n  var funcToString = funcPrototype[METHOD_TO_STRING];\n  var TO_STRING = '' + funcToString;\n\n  function funcApplyCall(func, oThis, args) {\n    return apply[METHOD_CALL](func, oThis, args);\n  }\n\n  function arraySliceCall(arrLike) {\n    var args = funcApplyCall(slice, arguments, [1]);\n    return funcApplyCall(slice, arrLike, args);\n  }\n\n  function arrayConcatCall(arrLike) {\n    var args = arraySliceCall(arguments, 1);\n    return funcApplyCall(concat, arrLike, args);\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\n  var bind = funcPrototype.bind || function(oThis) {\n    var args = arraySliceCall(arguments, 1);\n    var funcToBind = this;\n    return function() {\n      args = arrayConcatCall(args, arguments);\n      return funcApplyCall(funcToBind, oThis, args);\n    };\n  };\n\n  function funcBindCall(func) {\n    return funcApplyCall(bind, func, arraySliceCall(arguments, 1));\n  }\n\n  var create = oObject.create || function(proto) {\n    // simple but enough\n    NOOP[PROP_PROTOTYPE] = proto;\n    return new NOOP();\n  };\n\n  function includes(arrLike, v) {\n    var found = FALSE;\n    each(arrLike, function(item) {\n      if (item === v) {\n        found = TRUE;\n        return FALSE;\n      }\n    });\n    return found;\n  }\n\n  function throwTypeError(message) {\n    throw new TypeError(message);\n    // throwError(message, TypeError);\n  }\n\n  var nativeToString = funcBindCall(funcToString, funcToString);\n  nativeToString[METHOD_TO_STRING] = nativeToString;\n\n  // cache toStingFunctions\n  var toStingFns = {};\n  function pretendNativeFunction(funcName, func) {\n    func[METHOD_TO_STRING] = toStingFns[funcName] ||\n      (toStingFns[funcName] = (function() {\n        function toString() {\n          return TO_STRING.replace(METHOD_TO_STRING, funcName);\n        }\n        toString[METHOD_TO_STRING] = nativeToString;\n        return toString;\n      })());\n    return func;\n  }\n\n  var PROP_GET = 'get';\n  var PROP_SET = 'set';\n  function getOwnPropertyDescriptor(o, property) {\n    if (objectGetOwnPropertyDescriptor) {\n      return objectGetOwnPropertyDescriptor(o, property);\n    } else {\n      var METHOD_LOOKUP_SETTER = '__looupSetter__';\n      var METHOD_LOOKUP_GETTER = '__lookupGetter__';\n      var descriptor = {};\n      if (METHOD_LOOKUP_GETTER in o) {\n        descriptor[PROP_GET] = o[METHOD_LOOKUP_GETTER](property);\n      } else {\n        descriptor[PROP_VALUE] = descriptor[PROP_VALUE];\n      }\n      if (METHOD_LOOKUP_SETTER in o) {\n        descriptor[PROP_SET] = o[METHOD_LOOKUP_SETTER](property);\n      }\n    }\n  }\n\n  function defineProperty(o, property, descriptor) {\n    if (objectDefineProperty) {\n      descriptor.configurable = TRUE;\n\n      try {\n        return objectDefineProperty(o, property, descriptor);\n      } catch (e) {\n        var PROP_ENUMERABLE = 'enumerable';\n        if (descriptor[PROP_ENUMERABLE] && e.number === -0x7FF5EC54) {\n          descriptor[PROP_ENUMERABLE] = FALSE;\n          return objectDefineProperty(o, property, descriptor);\n        }\n      }\n    } else {\n      var METHOD_DEFINE_SETTER = '__defineSetter__';\n      var METHOD_DEFINE_GETTER = '__defineGetter__';\n      if (descriptor[PROP_GET]) {\n        if (METHOD_DEFINE_GETTER in o) {\n          o[METHOD_DEFINE_GETTER](property, descriptor[PROP_GET]);\n        } else {\n          o[property] = funcBindCall(descriptor[PROP_GET], o);\n        }\n      }\n\n      if (descriptor[PROP_SET] && METHOD_DEFINE_SETTER in o) {\n        o[METHOD_DEFINE_SETTER](property, descriptor[PROP_SET]);\n      }\n\n      if (descriptor[PROP_VALUE]) {\n        o[property] = descriptor[PROP_VALUE];\n      }\n    }\n  }\n\n\n  var PROP_ID = 'id';\n  var PROP_FOR = 'htmlFor';\n\n  var METHOD_GET_ELEMENTS_BY_TAG_NAME = 'getElementsByTagName';\n  var METHOD_SET_ATTRIBUTE = 'setAttribute';\n\n  var getElementById = funcBindCall(document.getElementById, document);\n  var HTMLElement = window.HTMLElement || window.Element || window.Node || NOOP;\n  var documentElement = document.documentElement;\n\n  var LABEL_TAG_NAME = 'LABEL';\n\n  var allLabels = documentElement[METHOD_GET_ELEMENTS_BY_TAG_NAME](LABEL_TAG_NAME);\n  var allMeters = documentElement[METHOD_GET_ELEMENTS_BY_TAG_NAME](METER_TAG_NAME);\n\n  // ie 8 document.createElement is not a function\n  // ie 7 document.createElement.apply is undefined\n  // var createElement = (function(createElement) {\n  //   return function() {\n  //     return funcApplyCall(createElement, document, arguments);\n  //   };\n  // })(document[METHOD_CREATE_ELEMENT]);\n  var createElement = funcBindCall(document[METHOD_CREATE_ELEMENT], document);\n\n  function isElement(el, tagName) {\n    var PROP_TAGNAME = 'tagName';\n    return el && el[PROP_TAGNAME] && el[PROP_TAGNAME][METHOD_TO_UPPER_CASE]() === tagName;\n  }\n\n\n  (function(HTMLLabelElement) {\n    var PROP_CONTROL = 'control';\n    var HTMLLabelElementPrototype = HTMLLabelElement && HTMLLabelElement[PROP_PROTOTYPE];\n    if (!HTMLLabelElementPrototype) {\n      return;\n    }\n    var descriptor = getOwnPropertyDescriptor(HTMLLabelElementPrototype, PROP_CONTROL);\n    if (!descriptor) {\n      defineProperty(HTMLLabelElementPrototype, PROP_CONTROL, getPropDescriptor(function() {\n        var label = this;\n        var htmlFor = label[PROP_FOR];\n        if (htmlFor) {\n          return getElementById(htmlFor);\n        }\n        // TOTO: get control\n        return null;\n      }));\n    }\n  })(window.HTMLLabelElement);\n\n  function getErrorMessage(testFunc, defaultMsg) {\n    try {\n      testFunc();\n    } catch (e) {\n      return e.message;\n    }\n    return defaultMsg;\n  }\n\n  var HTML_METER_ELEMENT_INTERFACE = 'HTML' +\n    METER_TAG_NAME.charAt(0)[METHOD_TO_UPPER_CASE]() +\n    METER_TAG_NAME[METHOD_SLICE](1)[METHOD_TO_LOWER_CASE]() +\n    'Element';\n\n  var noFiniteMsgs = (function() {\n    // find right msg by test on a non-finite prop of known element\n    // posiable currentTime/playbackRate/volume on HTMLMediaElement\n    // safari fails\n    var PROP_VOLUME = 'volume';\n    var PROP_PLACEHOLDER = '[prop]';\n    var errorMsgNonFinite = getErrorMessage(function() {\n      if (Audio) {\n        new Audio()[PROP_VOLUME] = 'x';\n      }\n    }, HTML_METER_ELEMENT_INTERFACE + '.' + PROP_VOLUME + ' error');\n    var MSG_NON_FINITE = errorMsgNonFinite\n        .replace('HTMLMediaElement', HTML_METER_ELEMENT_INTERFACE)\n        .replace(PROP_VOLUME, PROP_PLACEHOLDER);\n\n    var msgs = {};\n    each(METER_PROPS, function(prop) {\n      msgs[prop] = MSG_NON_FINITE.replace(PROP_PLACEHOLDER, prop);\n    });\n    return msgs;\n  })();\n\n  // only get necessary props\n  var propDependencies = (function() {\n    var props = {};\n    props[PROP_MIN] = [];\n    props[PROP_MAX] = [PROP_MIN];\n    props[PROP_LOW] =\n      props[PROP_OPTIMUM] =\n      props[PROP_VALUE] =\n      [PROP_MIN, PROP_MAX];\n    props[PROP_HIGH] = [PROP_MIN, PROP_MAX, PROP_LOW];\n\n    each(METER_PROPS, function(prop) {\n      props[prop] = arrayConcatCall(props[prop], [prop]);\n    });\n    return props;\n  })();\n\n\n  var METHOD_GET_ATTRIBUTE = 'getAttribute';\n  // use common getter & setter\n  function propGetter(prop) {\n    var meter = this;\n    var propValues = {};\n\n    each(propDependencies[prop], function(prop) {\n      propValues[prop] = parseValue(meter[METHOD_GET_ATTRIBUTE](prop));\n    });\n\n    return getPropValue(propValues, prop);\n  }\n\n  function propSetter(prop, value) {\n    var meter = this;\n    if (!isValidValue(value)) {\n      throwTypeError(noFiniteMsgs[prop]);\n    }\n\n    meter[METHOD_SET_ATTRIBUTE](prop, '' + parseValue(value, 0));\n    return value;\n  }\n\n  function lablesGetter() {\n    var meter = this;\n    var assignedLables = [];\n    var i = 0;\n    var propId = meter[PROP_ID];\n\n    each(allLabels, function(label) {\n      var propFor = label[PROP_FOR];\n\n      if (\n        (label.control === meter) ||\n        (!propFor && label[METHOD_GET_ELEMENTS_BY_TAG_NAME](METER_TAG_NAME)[0] === meter) ||\n        (propFor && propFor === propId)\n        ) {\n        assignedLables[i++] = label;\n      }\n    });\n\n    return assignedLables;\n  }\n\n  function getPropDescriptor(getter, setter) {\n    return {enumerable: TRUE, get: getter, set: setter};\n  }\n\n  function getValueDescriptor(value) {\n    return {value: value};\n  }\n\n  var HTMLMeterElement = (function(HTMLMeterElement) {\n    var MSG_ILLEAGE_CONSTRUCTOR = getErrorMessage(function() {\n      HTMLElement && new HTMLElement();\n    }, 'Illegal constructor');\n\n    HTMLMeterElement = HTMLMeterElement || (window[HTML_METER_ELEMENT_INTERFACE] = function() {\n      throwTypeError(MSG_ILLEAGE_CONSTRUCTOR);\n    });\n\n    var HTMLMeterElementPrototype = HTMLMeterElement[PROP_PROTOTYPE];\n    console.log(HTMLMeterElementPrototype[PROP_CONSTRUCTOR]);\n    throw('xxxxx')\n    if (HTMLMeterElementPrototype[PROP_CONSTRUCTOR] !== HTMLMeterElement) {\n      HTMLMeterElementPrototype = create(HTMLElement[PROP_PROTOTYPE]);\n      HTMLMeterElementPrototype[PROP_CONSTRUCTOR] = HTMLMeterElement;\n    }\n\n    console.log(HTMLMeterElementPrototype);\n    throw('xxxxx')\n\n    var labelsDescriptor = getOwnPropertyDescriptor(HTMLMeterElementPrototype, PROP_LABELS);\n    if (!labelsDescriptor) {\n      defineProperty(HTMLMeterElementPrototype, PROP_LABELS, getPropDescriptor(lablesGetter));\n    }\n\n    each(METER_PROPS, function(prop) {\n      var descriptor = getOwnPropertyDescriptor(HTMLMeterElementPrototype, prop);\n      if (!descriptor) {\n        defineProperty(HTMLMeterElementPrototype, prop, getPropDescriptor(\n          propGetter,\n          propSetter\n        ));\n      }\n    });\n\n    if (HTMLMeterElement[PROP_PROTOTYPE] !== HTMLMeterElementPrototype) {\n      // will this even excuted?\n      console.log('prop = prop');\n      HTMLMeterElement[PROP_PROTOTYPE] = HTMLMeterElementPrototype;\n    }\n    if (HTMLMeterElement[PROP_PROTO] !== HTMLMeterElementPrototype) {\n      HTMLMeterElement[PROP_PROTO] = HTMLMeterElementPrototype;\n    }\n\n    return HTMLMeterElement;\n  })(window[HTML_METER_ELEMENT_INTERFACE]);\n\n  var meterPolyfill = meterElement[PROP_CONSTRUCTOR] === HTMLMeterElement ? NOOP : (function() {\n    /* polyfill starts */\n\n    var POLYFILL_FLAG = '_polyfill';\n\n    var METHOD_REMOVE_CHILD = 'removeChild';\n    var METHOD_REMOVE_ATTRIBUTE = 'removeAttribute';\n    var METHOD_APPEND_CHILD = 'appendChild';\n    var METHOD_ADD_EVENT_LISTENER = 'addEventListener';\n    var METHOD_ATTACH_EVENT = 'attachEvent';\n    var PROP_FIRST_CHILD = 'firstChild';\n\n    var DIV_TAG_NAME = 'DIV';\n\n    var DIV_OPENING_TAG = '<div class=\"';\n    var DIV_CLOSING_TAG = '</div>';\n\n    var TIMEOUT_FREQUENCY = 10;\n\n    // there is no moz/ms/o vendor prefix\n    var MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n    meterElement[POLYFILL_FLAG] = VERSION; // for attersAsProps test\n\n    var SUPPORTS_MUTATION_OBSERVER = !!MutationObserver;\n    var SUPPORTS_ADD_EVENT_LISTENER = !!window[METHOD_ADD_EVENT_LISTENER];\n    var SUPPORTS_ATTACH_EVENT = !!window[METHOD_ATTACH_EVENT];\n    // ie <= 8 attributes are same as properties\n    var SUPPORTS_ATTERS_AS_PROPS = meterElement[METHOD_GET_ATTRIBUTE](POLYFILL_FLAG) ===\n      VERSION;\n    var SUPPORTS_PROPERTYCHANGE = 'onpropertychange' in document;\n    var SUPPORTS_DOM_NODE_INSERTED = FALSE;\n    var SUPPORTS_DOM_ATTR_MODIFIED = FALSE;\n\n\n    var METHOD_DOM_NODE_INSERTED = 'DOMNodeInserted';\n    var METHOD_DOM_ATTR_MODIFIED = 'DOMAttrModified';\n    if (!SUPPORTS_MUTATION_OBSERVER) {\n      var testDiv = createElement(DIV_TAG_NAME);\n      var testChild = createElement(DIV_TAG_NAME);\n\n      on(testDiv, METHOD_DOM_NODE_INSERTED, function() {\n        SUPPORTS_DOM_NODE_INSERTED = TRUE;\n      });\n      on(testDiv, METHOD_DOM_ATTR_MODIFIED, function() {\n        SUPPORTS_DOM_ATTR_MODIFIED = TRUE;\n      });\n\n      testDiv[METHOD_APPEND_CHILD](testChild);\n      testDiv[METHOD_SET_ATTRIBUTE](POLYFILL_FLAG, VERSION);\n\n      testDiv = testChild = NULL;\n    }\n\n    function on(target, eventTypes, listener, useCapture) {\n      each(eventTypes.split(' '), function(type) {\n        if (SUPPORTS_ADD_EVENT_LISTENER) {\n          target[METHOD_ADD_EVENT_LISTENER](type, listener, !!useCapture);\n        } else if (SUPPORTS_ATTACH_EVENT) {\n          target[METHOD_ATTACH_EVENT]('on' + type, listener);\n        } else {\n          target['on' + type] = listener;\n        }\n      });\n    }\n\n    function observe(target, callback, options) {\n      var observer = new MutationObserver(callback);\n      observer.observe(target, options);\n      return observer;\n    }\n\n    var METER_SHADOW_HTML = [\n      DIV_OPENING_TAG + METER_CLASS_PREFIX + 'inner-element\">',\n        DIV_OPENING_TAG + METER_CLASS_PREFIX + 'bar\">',\n          DIV_OPENING_TAG + METER_VALUE_CLASSES[LEVEL_SUBOPTIMUM] + '\" style=\"width: 0%\">',\n          DIV_CLOSING_TAG,\n        DIV_CLOSING_TAG,\n      DIV_CLOSING_TAG\n    ].join('');\n\n    var setTimeout = window.setTimeout;\n    var setInterval = window.setInterval;\n\n    function walkContext(context, tagName, func) {\n      context = context[PROP_LENGTH] ? context : context[METHOD_GET_ELEMENTS_BY_TAG_NAME](tagName);\n      each(context, function(context) {\n        func(context);\n      });\n    }\n\n    function observerAttributes(target, attrs, callback) {\n      if (SUPPORTS_MUTATION_OBSERVER) {\n        observe(target, function(mutations) {\n          each(mutations, function(mutation) {\n            var atrr = mutation.attributeName[METHOD_TO_LOWER_CASE]();\n            callback(target, atrr);\n          });\n        }, {\n          attributes: TRUE,\n          attributeFilter: attrs\n        });\n      } else if (SUPPORTS_DOM_ATTR_MODIFIED) {\n        on(target, METHOD_DOM_ATTR_MODIFIED, function(e) {\n          var attr = e.attrName[METHOD_TO_LOWER_CASE]();\n          if (includes(attrs, attr)) {\n            callback(target, attr);\n          }\n        });\n      } else if (SUPPORTS_PROPERTYCHANGE) {\n        on(target, 'propertychange', function(e) {\n          var prop = e.propertyName[METHOD_TO_LOWER_CASE]();\n          if (includes(attrs, prop)) {\n            callback(target, prop);\n          }\n        });\n      }\n\n      // anything else?\n    }\n\n    function polyfillMeter(context) {\n\n      if (!isElement(context, METER_TAG_NAME)) {\n        return walkContext(context || allMeters, METER_TAG_NAME, polyfillMeter);\n      }\n\n      var meter = context;\n      if (!meter[POLYFILL_FLAG]) {\n        defineProperty(meter, POLYFILL_FLAG, getValueDescriptor(VERSION));\n      //   // meter.innerHTML = METER_SHADOW_HTML;\n        defineMeterProperties(meter);\n      console.log(meter);\n      //   // updateMeterStyle(meter);\n      //   // observerAttributes(meter, METER_PROPS, triggerAttrChange);\n      }\n    }\n\n    function updateMeterStyle(meter) {\n      var result = meterCalculator(meter);\n\n      var PROP_CLASS_NAME = 'className';\n      var PROP_STYLE = 'style';\n      var PROP_WIDTH = 'width';\n\n      var valueElement = meter[PROP_FIRST_CHILD][PROP_FIRST_CHILD][PROP_FIRST_CHILD];\n\n      // only update when necessary\n      var currentClassName = valueElement[PROP_CLASS_NAME];\n      var changeClassName = result[PROP_CLASS_NAME];\n      if (currentClassName !== changeClassName) {\n        valueElement[PROP_CLASS_NAME] = changeClassName;\n      }\n\n      var currentWidth = valueElement[PROP_STYLE][PROP_WIDTH];\n      var changeWidth = result.percentage + '%';\n      if (currentWidth !== changeWidth) {\n        valueElement[PROP_STYLE][PROP_WIDTH] = changeWidth;\n      }\n      return meter;\n    }\n\n    function triggerAttrChange(meter, attr) {\n      if (includes(METER_PROPS, attr[METHOD_TO_LOWER_CASE]())) {\n        updateMeterStyle(meter);\n      }\n    }\n\n    var descriptors = (function(HTMLMeterElementPrototype) {\n      var descriptors = {};\n      each(METER_PROPS, function(prop) {\n        descriptors[prop] = getOwnPropertyDescriptor(HTMLMeterElementPrototype, prop);\n      });\n      descriptors[PROP_LABELS] = getOwnPropertyDescriptor(HTMLMeterElementPrototype, PROP_LABELS);\n      return descriptors;\n    })(HTMLMeterElement.prototype);\n\n\n    function defineMeterProperties(meter) {\n      var HTMLMeterElementPrototype = HTMLMeterElement[PROP_PROTOTYPE];\n\n      var properties = {};\n\n      // if (!SUPPORTS_ATTERS_AS_PROPS) {\n\n      //   each(METER_PROPS, function(prop) {\n      //     properties[prop] = descriptors[prop];\n      //   });\n      // }\n\n      // properties[PROP_LABELS] = descriptors[PROP_LABELS];\n\n      if (!SUPPORTS_ATTERS_AS_PROPS) {\n        // var setAttribute = funcBindCall(meter[METHOD_SET_ATTRIBUTE], meter);\n\n        // var methodSetAttribute = pretendNativeFunction(METHOD_SET_ATTRIBUTE, function(attr, value) {\n        //   setAttribute(attr, value);\n        //   triggerAttrChange(meter, attr);\n        // });\n\n        // properties[METHOD_SET_ATTRIBUTE] = getValueDescriptor(methodSetAttribute);\n      }\n\n      if (SUPPORTS_ATTERS_AS_PROPS) {\n        // var removeAttribute = funcBindCall(meter[METHOD_REMOVE_ATTRIBUTE], meter);\n\n        // var methodRemoveAttribute = pretendNativeFunction(METHOD_REMOVE_ATTRIBUTE, function(attr) {\n        //   removeAttribute(attr);\n        //   triggerAttrChange(meter, attr);\n        // });\n\n        // properties[METHOD_REMOVE_ATTRIBUTE] = getValueDescriptor(methodRemoveAttribute);\n      }\n\n      // var METHOD_CLONE_NODE = 'cloneNode';\n      // var cloneNode = funcBindCall(meter[METHOD_CLONE_NODE], meter);\n      // var methodCloneNode = pretendNativeFunction(METHOD_CLONE_NODE, function(deep) {\n      //   var clone = cloneNode(FALSE);\n      //   if (SUPPORTS_ATTERS_AS_PROPS) {\n      //     clone[METHOD_REMOVE_ATTRIBUTE](POLYFILL_FLAG);\n      //   }\n      //   polyfillMeter(clone);\n      //   return clone;\n      // });\n\n      // properties[METHOD_CLONE_NODE] = getValueDescriptor(methodCloneNode);\n      properties[POLYFILL_FLAG] = getValueDescriptor(VERSION);\n\n      // if (meter[PROP_CONSTRUCTOR] !== HTMLMeterElement) {\n      //   // ie <= 10 need define construtor\n      //   properties[PROP_CONSTRUCTOR] = getValueDescriptor(HTMLMeterElement);\n      // }\n\n\n      for (var prop in properties) {\n        if (properties.hasOwnProperty(prop)) {\n          defineProperty(meter, prop, properties[prop]);\n        }\n      }\n      // meter[PROP_CONSTRUCTOR] = HTMLMeterElement;\n      meter[PROP_PROTO] = HTMLMeterElementPrototype;\n    }\n\n    // overwrite document.createElement\n    document[METHOD_CREATE_ELEMENT] = pretendNativeFunction(METHOD_CREATE_ELEMENT, function() {\n      var el = funcApplyCall(createElement, document, arguments);\n      if (isElement(el, METER_TAG_NAME)) {\n        polyfillMeter(el);\n      }\n      return el;\n    });\n\n    function observerDocument() {\n      var PROP_TARGET = 'target';\n      if (SUPPORTS_MUTATION_OBSERVER) {\n        // observe subtree\n        observe(documentElement, function(mutations) {\n          each(mutations, function(mutation) {\n            polyfillMeter(mutation[PROP_TARGET]);\n          });\n        }, {\n          subtree: TRUE,\n          childList: TRUE\n        });\n      } else {\n        if (SUPPORTS_DOM_NODE_INSERTED) {\n          on(documentElement, METHOD_DOM_NODE_INSERTED, function(e) {\n            polyfillMeter(e[PROP_TARGET]);\n          });\n        } else {\n          setInterval(polyfillMeter, TIMEOUT_FREQUENCY);\n        }\n      }\n    }\n\n    (function() {\n      var isReady = FALSE;\n      var isTop = FALSE;\n\n      function setReady() {\n        isReady = TRUE;\n      }\n\n      function completed() {\n        if (document.readyState === 'complete') {\n          setReady();\n        }\n      }\n\n      try {\n        isTop = isNull(window.frameElement);\n      } catch (_) {}\n\n      if (!SUPPORTS_ADD_EVENT_LISTENER && documentElement.doScroll && isTop) {\n        (function doScroll() {\n          try {\n            documentElement.doScroll();\n            setReady();\n          } catch (_) {\n            setTimeout(doScroll, TIMEOUT_FREQUENCY);\n          }\n        })();\n      }\n\n      on(document, 'DOMContentLoaded', setReady);\n      on(window, 'load', setReady);\n      on(document, 'readystatechange', completed);\n      completed();\n\n      (function polyfillWhenReady() {\n        if (isReady) {\n          polyfillMeter();\n          observerDocument();\n        } else {\n          setTimeout(polyfillWhenReady, TIMEOUT_FREQUENCY);\n        }\n      })();\n    })();\n\n    return polyfillMeter;\n  })();\n\n\n  meterPolyfill.version = VERSION;\n  meterPolyfill.support = nativeSupport;\n  meterPolyfill.CLASSES = METER_VALUE_CLASSES;\n  meterPolyfill.LEVEL_SUBOPTIMUM = LEVEL_SUBOPTIMUM;\n  meterPolyfill.LEVEL_OPTIMUM = LEVEL_OPTIMUM;\n  meterPolyfill.LEVEL_SUBSUBOPTIMUM = LEVEL_SUBSUBOPTIMUM;\n  meterPolyfill.calc = meterCalculator;\n\n  return meterPolyfill;\n});\n"]}